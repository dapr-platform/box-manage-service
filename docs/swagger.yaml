basePath: /swagger/box-manage-service
definitions:
  controllers.APIResponse:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      message:
        example: 操作成功
        type: string
      timestamp:
        example: "2025-01-26T12:00:00Z"
        type: string
    type: object
  controllers.AddBoxRequest:
    properties:
      description:
        example: 边缘AI推理盒子
        type: string
      ip_address:
        example: 192.168.1.100
        type: string
      location:
        example: 机房A-机柜01
        type: string
      name:
        example: AI-Box-001
        type: string
      port:
        example: 9000
        maximum: 65535
        minimum: 1
        type: integer
      tags:
        example:
        - gpu
        - high-performance
        - edge
        items:
          type: string
        type: array
    required:
    - ip_address
    - name
    - port
    type: object
  controllers.BatchDeployRequest:
    properties:
      box_ids:
        items:
          type: integer
        type: array
      task_ids:
        items:
          type: string
        type: array
    required:
    - box_ids
    - task_ids
    type: object
  controllers.BatchDeploymentRequest:
    properties:
      auto_start:
        type: boolean
      deployment_config:
        $ref: '#/definitions/models.DeploymentConfig'
      target_box_ids:
        items:
          type: integer
        minItems: 1
        type: array
      task_ids:
        items:
          type: integer
        minItems: 1
        type: array
    required:
    - target_box_ids
    - task_ids
    type: object
  controllers.BatchOperationRequest:
    properties:
      task_ids:
        items:
          type: string
        minItems: 1
        type: array
    required:
    - task_ids
    type: object
  controllers.BatchOperationResponse:
    properties:
      failure_count:
        type: integer
      results:
        items:
          $ref: '#/definitions/controllers.BatchOperationResult'
        type: array
      success_count:
        type: integer
      total_tasks:
        type: integer
    type: object
  controllers.BatchOperationResult:
    properties:
      message:
        type: string
      new_status:
        type: string
      success:
        type: boolean
      task_id:
        type: string
    type: object
  controllers.BatchUpgradeRequest:
    properties:
      box_ids:
        items:
          type: integer
        type: array
      force:
        example: false
        type: boolean
      program_file:
        example: /path/to/program.tar.gz
        type: string
      version:
        example: 1.0.1
        type: string
    required:
    - box_ids
    - program_file
    - version
    type: object
  controllers.BatchUpgradeTaskResponse:
    properties:
      box_ids:
        items:
          type: integer
        type: array
      completed_at:
        type: string
      completed_boxes:
        type: integer
      created_at:
        type: string
      failed_boxes:
        type: integer
      force:
        type: boolean
      id:
        type: integer
      name:
        type: string
      program_file:
        type: string
      started_at:
        type: string
      status:
        $ref: '#/definitions/models.UpgradeStatus'
      total_boxes:
        type: integer
      version_to:
        type: string
    type: object
  controllers.BoxResponse:
    properties:
      build_time:
        description: 盒子软件构建时间
        type: string
      can_accept_task:
        description: 是否可以接受新任务
        type: boolean
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      created_by:
        description: 关联字段
        type: integer
      current_tasks:
        description: 当前运行的任务
        items:
          $ref: '#/definitions/controllers.BoxTaskInfo'
        type: array
      description:
        type: string
      hardware:
        $ref: '#/definitions/models.Hardware'
      heartbeats:
        items:
          $ref: '#/definitions/models.BoxHeartbeat'
        type: array
      id:
        description: 主键ID
        example: 1
        type: integer
      ip_address:
        type: string
      is_online:
        description: 计算字段：是否在线
        type: boolean
      last_heartbeat:
        description: 监控相关字段
        type: string
      location:
        type: string
      meta:
        allOf:
        - $ref: '#/definitions/models.BoxMeta'
        description: 设备能力信息（从/api/v1/meta获取）
      name:
        type: string
      port:
        maximum: 65535
        minimum: 1
        type: integer
      resources:
        $ref: '#/definitions/models.Resources'
      status:
        $ref: '#/definitions/models.BoxStatus'
      tags:
        description: 盒子标签，用于任务调度匹配
        items:
          type: string
        type: array
      task_count:
        description: 任务总数
        type: integer
      tasks:
        description: 关联关系
        items:
          $ref: '#/definitions/models.Task'
        type: array
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
      upgrades:
        description: 注意：Models 关联通过 BoxModel 表在业务层处理，不在这里定义 GORM 关联
        items:
          $ref: '#/definitions/models.UpgradeTask'
        type: array
      version:
        description: 盒子软件版本
        type: string
    required:
    - ip_address
    - name
    - status
    type: object
  controllers.BoxTaskInfo:
    properties:
      auto_start:
        type: boolean
      dev_id:
        type: string
      inference_tasks_count:
        type: integer
      rtsp_url:
        type: string
      status:
        type: string
      task_id:
        type: string
    type: object
  controllers.CreateDeploymentTaskRequest:
    properties:
      auto_start:
        description: 是否创建后自动开始
        type: boolean
      deployment_config:
        $ref: '#/definitions/models.DeploymentConfig'
      description:
        type: string
      name:
        type: string
      priority:
        type: integer
      target_box_ids:
        items:
          type: integer
        minItems: 1
        type: array
      task_ids:
        items:
          type: integer
        minItems: 1
        type: array
    required:
    - name
    - target_box_ids
    - task_ids
    type: object
  controllers.CreateModelDeploymentRequest:
    properties:
      box_ids:
        description: 目标盒子ID列表
        items:
          type: integer
        type: array
      converted_model_ids:
        description: 转换后模型ID列表
        items:
          type: integer
        type: array
      name:
        description: 任务名称
        type: string
    required:
    - box_ids
    - converted_model_ids
    - name
    type: object
  controllers.CreateTaskRequest:
    properties:
      affinityTags:
        description: 亲和性标签
        items:
          type: string
        type: array
      autoSchedule:
        description: 自动调度
        type: boolean
      autoStart:
        type: boolean
      description:
        description: 任务描述
        type: string
      inferenceTasks:
        items:
          $ref: '#/definitions/models.InferenceTask'
        type: array
      name:
        description: 任务名称
        type: string
      outputSettings:
        $ref: '#/definitions/models.OutputSettings'
      priority:
        type: integer
      rois:
        items:
          $ref: '#/definitions/models.ROIConfig'
        type: array
      skipFrame:
        type: integer
      tags:
        items:
          type: string
        type: array
      taskId:
        type: string
      useROItoInference:
        type: boolean
      videoSourceId:
        description: 视频源ID
        type: integer
    required:
    - inferenceTasks
    - taskId
    - videoSourceId
    type: object
  controllers.DeployTaskRequest:
    properties:
      boxId:
        type: integer
    required:
    - boxId
    type: object
  controllers.DiscoverBoxesRequest:
    properties:
      ip_range:
        example: 192.168.1.1-192.168.1.254
        type: string
      port:
        example: 9000
        type: integer
    required:
    - ip_range
    - port
    type: object
  controllers.DiscoverBoxesResponse:
    properties:
      ip_range:
        description: 扫描范围
        type: string
      port:
        description: 扫描端口
        type: integer
      scan_id:
        description: 扫描任务ID
        type: string
      start_time:
        description: 开始时间
        type: string
      status:
        description: 扫描状态：started
        type: string
    type: object
  controllers.ErrorResponse:
    properties:
      code:
        example: 400
        type: integer
      error:
        example: 详细错误信息
        type: string
      message:
        example: 参数错误
        type: string
      timestamp:
        example: "2025-01-26T12:00:00Z"
        type: string
    type: object
  controllers.HealthResponse:
    properties:
      service:
        example: box-manage-service
        type: string
      status:
        example: ok
        type: string
      timestamp:
        example: "2024-01-01T00:00:00Z"
        type: string
      version:
        example: 1.0.0
        type: string
    type: object
  controllers.PaginatedResponse:
    properties:
      code:
        example: 200
        type: integer
      data: {}
      message:
        example: 操作成功
        type: string
      page:
        example: 1
        type: integer
      size:
        example: 10
        type: integer
      timestamp:
        example: "2025-01-26T12:00:00Z"
        type: string
      total:
        example: 100
        type: integer
    type: object
  controllers.RollbackRequest:
    properties:
      target_version:
        example: 1.0.0
        type: string
    required:
    - target_version
    type: object
  controllers.TaskResultsResponse:
    properties:
      duration:
        type: string
      error_message:
        type: string
      forward_failed:
        type: integer
      forward_success:
        type: integer
      inference_count:
        type: integer
      start_time:
        type: string
      statistics:
        additionalProperties: true
        type: object
      status:
        type: string
      stop_time:
        type: string
      task_id:
        type: string
      total_frames:
        type: integer
    type: object
  controllers.TaskStatusResponse:
    properties:
      box_id:
        type: integer
      box_status:
        type: string
      error_message:
        type: string
      last_heartbeat:
        type: string
      max_retries:
        type: integer
      progress:
        type: number
      retry_count:
        type: integer
      start_time:
        type: string
      status:
        type: string
      stop_time:
        type: string
      task_id:
        type: string
    type: object
  controllers.UpdateBoxRequest:
    properties:
      description:
        example: 更新的盒子描述
        type: string
      location:
        example: 机房B-机柜02
        type: string
      name:
        example: AI-Box-001-Updated
        type: string
      tags:
        example:
        - gpu
        - high-performance
        - updated
        items:
          type: string
        type: array
    type: object
  controllers.UpdateTaskRequest:
    properties:
      affinityTags:
        description: 亲和性标签
        items:
          type: string
        type: array
      autoSchedule:
        description: 自动调度
        type: boolean
      autoStart:
        type: boolean
      description:
        description: 任务描述
        type: string
      inferenceTasks:
        items:
          $ref: '#/definitions/models.InferenceTask'
        type: array
      name:
        description: 任务名称
        type: string
      outputSettings:
        $ref: '#/definitions/models.OutputSettings'
      priority:
        type: integer
      rois:
        items:
          $ref: '#/definitions/models.ROIConfig'
        type: array
      skipFrame:
        type: integer
      tags:
        items:
          type: string
        type: array
      useROItoInference:
        type: boolean
      videoSourceId:
        description: 视频源ID
        type: integer
    type: object
  controllers.UpgradeFileResponse:
    properties:
      checksum:
        type: string
      content_type:
        type: string
      download_url:
        type: string
      name:
        type: string
      size:
        type: integer
      type:
        $ref: '#/definitions/models.FileType'
      uploaded_at:
        type: string
    type: object
  controllers.UpgradePackageRequest:
    properties:
      description:
        type: string
      is_prerelease:
        type: boolean
      max_box_version:
        type: string
      min_box_version:
        type: string
      name:
        type: string
      release_notes:
        type: string
      type:
        $ref: '#/definitions/models.UpgradePackageType'
      version:
        type: string
    required:
    - name
    - type
    - version
    type: object
  controllers.UpgradePackageResponse:
    properties:
      checksum:
        type: string
      created_at:
        type: string
      description:
        type: string
      download_count:
        type: integer
      files:
        items:
          $ref: '#/definitions/controllers.UpgradeFileResponse'
        type: array
      id:
        type: integer
      is_prerelease:
        type: boolean
      max_box_version:
        type: string
      min_box_version:
        type: string
      name:
        type: string
      release_notes:
        type: string
      released_at:
        type: string
      released_by:
        type: integer
      status:
        $ref: '#/definitions/models.PackageStatus'
      total_size:
        type: integer
      type:
        $ref: '#/definitions/models.UpgradePackageType'
      updated_at:
        type: string
      upgrade_count:
        type: integer
      version:
        type: string
    type: object
  controllers.UpgradeRequest:
    properties:
      force:
        example: false
        type: boolean
      program_file:
        example: /path/to/program.tar.gz
        type: string
      version:
        example: 1.0.1
        type: string
    required:
    - program_file
    - version
    type: object
  controllers.UpgradeTaskResponse:
    properties:
      box_id:
        type: integer
      box_name:
        type: string
      can_rollback:
        type: boolean
      completed_at:
        type: string
      created_at:
        type: string
      error_message:
        type: string
      force:
        type: boolean
      id:
        type: integer
      name:
        type: string
      program_file:
        type: string
      progress:
        type: integer
      rollback_version:
        type: string
      started_at:
        type: string
      status:
        $ref: '#/definitions/models.UpgradeStatus'
      version_from:
        type: string
      version_to:
        type: string
    type: object
  models.BatchUpgradeTask:
    properties:
      box_ids:
        items:
          type: integer
        type: array
      completed_at:
        type: string
      completed_boxes:
        type: integer
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      created_by:
        description: 创建者
        type: integer
      failed_boxes:
        type: integer
      force:
        type: boolean
      id:
        description: 主键ID
        example: 1
        type: integer
      name:
        type: string
      program_file:
        description: 兼容字段，逐步废弃
        type: string
      started_at:
        description: 时间相关
        type: string
      status:
        $ref: '#/definitions/models.UpgradeStatus'
      total_boxes:
        type: integer
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
      upgrade_package:
        allOf:
        - $ref: '#/definitions/models.UpgradePackage'
        description: 关联关系
      upgrade_package_id:
        description: 关联升级包
        type: integer
      upgrade_tasks:
        items:
          $ref: '#/definitions/models.UpgradeTask'
        type: array
      version_from:
        type: string
      version_to:
        type: string
    type: object
  models.Box:
    properties:
      build_time:
        description: 盒子软件构建时间
        type: string
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      created_by:
        description: 关联字段
        type: integer
      description:
        type: string
      hardware:
        $ref: '#/definitions/models.Hardware'
      heartbeats:
        items:
          $ref: '#/definitions/models.BoxHeartbeat'
        type: array
      id:
        description: 主键ID
        example: 1
        type: integer
      ip_address:
        type: string
      last_heartbeat:
        description: 监控相关字段
        type: string
      location:
        type: string
      meta:
        allOf:
        - $ref: '#/definitions/models.BoxMeta'
        description: 设备能力信息（从/api/v1/meta获取）
      name:
        type: string
      port:
        maximum: 65535
        minimum: 1
        type: integer
      resources:
        $ref: '#/definitions/models.Resources'
      status:
        $ref: '#/definitions/models.BoxStatus'
      tags:
        description: 盒子标签，用于任务调度匹配
        items:
          type: string
        type: array
      tasks:
        description: 关联关系
        items:
          $ref: '#/definitions/models.Task'
        type: array
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
      upgrades:
        description: 注意：Models 关联通过 BoxModel 表在业务层处理，不在这里定义 GORM 关联
        items:
          $ref: '#/definitions/models.UpgradeTask'
        type: array
      version:
        description: 盒子软件版本
        type: string
    required:
    - ip_address
    - name
    - status
    type: object
  models.BoxHeartbeat:
    properties:
      box:
        allOf:
        - $ref: '#/definitions/models.Box'
        description: 关联关系
      box_id:
        type: integer
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      id:
        description: 主键ID
        example: 1
        type: integer
      resources:
        $ref: '#/definitions/models.Resources'
      status:
        $ref: '#/definitions/models.BoxStatus'
      timestamp:
        type: string
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
    type: object
  models.BoxMeta:
    properties:
      defaults:
        allOf:
        - $ref: '#/definitions/models.MetaDefaults'
        description: 默认配置
      file_limits:
        allOf:
        - $ref: '#/definitions/models.FileLimits'
        description: 文件限制
      inference_type_mapping:
        additionalProperties:
          type: string
        description: 推理类型映射
        type: object
      supported_hardware:
        description: 支持的硬件平台，如 ["BM1684", "BM1684X"]
        items:
          type: string
        type: array
      supported_types:
        description: 支持的模型类型，如 ["detection", "segmentation"]
        items:
          type: string
        type: array
      supported_versions:
        description: 支持的模型版本，如 ["yolov8"]
        items:
          type: string
        type: array
    type: object
  models.BoxStatus:
    enum:
    - online
    - offline
    - maintenance
    - error
    type: string
    x-enum-comments:
      BoxStatusError: 错误
      BoxStatusMaintenance: 维护中
      BoxStatusOffline: 离线
      BoxStatusOnline: 在线
    x-enum-descriptions:
    - 在线
    - 离线
    - 维护中
    - 错误
    x-enum-varnames:
    - BoxStatusOnline
    - BoxStatusOffline
    - BoxStatusMaintenance
    - BoxStatusError
  models.ConversionParameters:
    properties:
      cache_dir:
        description: 缓存目录
        example: ""
        type: string
      custom_params:
        description: 自定义参数
        example: ""
        type: string
      enable_debug:
        description: 是否启用调试
        example: false
        type: boolean
      input_shape:
        description: 输入形状
        example:
        - 1
        - 3
        - 640
        - 640
        items:
          type: integer
        type: array
      model_format:
        description: 模型格式
        example: bmodel
        type: string
      quantization:
        description: 量化参数 (F16/F32)
        example: F16
        type: string
      target_chip:
        description: 目标芯片
        example: BM1684X
        type: string
      target_yolo_version:
        description: 目标YOLO版本，默认yolov8
        example: yolov8
        type: string
      work_dir:
        description: 工作目录
        example: ""
        type: string
    type: object
  models.ConversionTask:
    description: 模型转换任务，用于管理pt/onnx到bmodel的转换过程
    properties:
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      created_by:
        description: 创建信息
        example: 1
        type: integer
      end_time:
        description: 结束时间
        example: "2025-01-28T12:30:00Z"
        type: string
      error_message:
        description: 错误信息
        example: ""
        type: string
      id:
        description: 主键ID
        example: 1
        type: integer
      logs:
        description: 文件路径和日志
        example: |-
          转换开始...
          正在处理模型...
          转换完成
        type: string
      original_model:
        allOf:
        - $ref: '#/definitions/models.OriginalModel'
        description: 关联模型
      original_model_id:
        description: 原始模型ID
        example: 1
        type: integer
      output_path:
        description: 输出文件路径
        example: /data/models/converted/yolo-v5-bm1684x.bmodel
        type: string
      parameters:
        allOf:
        - $ref: '#/definitions/models.ConversionParameters'
        description: 转换参数
      progress:
        description: 进度 (0-100)
        example: 50
        type: integer
      start_time:
        description: 开始时间
        example: "2025-01-28T12:00:00Z"
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.ConversionTaskStatus'
        description: 任务状态
        example: pending
      target_format:
        description: 目标格式
        example: bmodel
        type: string
      task_id:
        description: 任务标识
        example: conv_task_abc123
        type: string
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
    type: object
  models.ConversionTaskStatus:
    enum:
    - pending
    - running
    - completed
    - failed
    type: string
    x-enum-comments:
      ConversionTaskStatusCompleted: 已完成
      ConversionTaskStatusFailed: 失败
      ConversionTaskStatusPending: 待处理
      ConversionTaskStatusRunning: 运行中
    x-enum-descriptions:
    - 待处理
    - 运行中
    - 已完成
    - 失败
    x-enum-varnames:
    - ConversionTaskStatusPending
    - ConversionTaskStatusRunning
    - ConversionTaskStatusCompleted
    - ConversionTaskStatusFailed
  models.ConvertedModel:
    description: 转换后模型数据结构，支持bmodel等转换后格式的完整管理
    properties:
      access_count:
        description: 访问控制和统计
        example: 50
        type: integer
      conversion_task_id:
        description: 关联转换任务ID
        example: conv_task_abc123
        type: string
      convert_params:
        description: 转换参数
        example: '{}'
        type: string
      converted_at:
        description: 转换完成时间
        example: "2025-01-28T12:00:00Z"
        type: string
      converted_path:
        description: 转换后文件路径（与FilePath相同，为了兼容数据库）
        example: /data/models/converted/yolo-v5-bm1684x.bmodel
        type: string
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      description:
        description: 模型描述
        example: 转换为BM1684X芯片优化的YOLO v5模型
        type: string
      display_name:
        description: 显示名称
        example: YOLO v5 目标检测模型 (BM1684X)
        type: string
      download_count:
        description: 下载次数
        example: 10
        type: integer
      file_md5:
        description: 文件MD5校验和
        example: d41d8cd98f00b204e9800998ecf8427e
        type: string
      file_name:
        description: 文件信息
        example: yolo-v5-bm1684x.bmodel
        type: string
      file_path:
        description: 文件存储路径
        example: /data/models/converted/yolo-v5-bm1684x.bmodel
        type: string
      file_sha256:
        description: 文件SHA256校验和
        example: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        type: string
      file_size:
        description: 文件大小（字节）
        example: 52428800
        type: integer
      id:
        description: 主键ID
        example: 1
        type: integer
      input_channels:
        description: 输入通道数
        example: 3
        type: integer
      input_height:
        description: 输入高度
        example: 640
        type: integer
      input_width:
        description: 输入宽度
        example: 640
        type: integer
      last_accessed_at:
        description: 最后访问时间
        example: "2025-01-28T12:00:00Z"
        type: string
      model_key:
        description: '模型标识 - 格式: type-targetyoloVersion-targetChip-name'
        example: detection-yolov8-bm1684x-cow_head
        type: string
      name:
        description: 基本信息
        example: yolo-v5-bm1684x
        type: string
      original_model:
        allOf:
        - $ref: '#/definitions/models.OriginalModel'
        description: 关联模型
      original_model_id:
        description: 关联信息
        example: 1
        type: integer
      quantization:
        description: 量化类型 (F16/F32)
        example: F16
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.ConvertedModelStatus'
        description: 状态管理
        example: completed
      tags:
        description: 元数据和标签
        example: optimized,production,bm1684x
        type: string
      target_chip:
        description: 目标芯片
        example: bm1684x
        type: string
      target_yolo_version:
        description: 目标YOLO版本
        example: yolov8
        type: string
      task_type:
        allOf:
        - $ref: '#/definitions/models.ModelTaskType'
        description: AI任务属性（继承自原始模型）
        example: detection
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
      user_id:
        description: 创建用户ID
        example: 1
        type: integer
      version:
        description: 版本号
        example: 1.0.0
        type: string
    type: object
  models.ConvertedModelStatus:
    enum:
    - pending
    - converting
    - completed
    - failed
    type: string
    x-enum-comments:
      ConvertedModelStatusCompleted: 已完成
      ConvertedModelStatusConverting: 转换中
      ConvertedModelStatusFailed: 转换失败
      ConvertedModelStatusPending: 待转换
    x-enum-descriptions:
    - 待转换
    - 转换中
    - 已完成
    - 转换失败
    x-enum-varnames:
    - ConvertedModelStatusPending
    - ConvertedModelStatusConverting
    - ConvertedModelStatusCompleted
    - ConvertedModelStatusFailed
  models.DeploymentConfig:
    properties:
      cleanup_on_failure:
        description: 失败时清理
        type: boolean
      concurrent_limit:
        description: 并发限制
        type: integer
      retry_attempts:
        description: 重试次数
        type: integer
      stop_on_first_failure:
        description: 遇到第一个失败时停止
        type: boolean
      timeout_seconds:
        description: 超时时间(秒)
        type: integer
      validate_before_deploy:
        description: 部署前验证
        type: boolean
    type: object
  models.DeploymentLog:
    properties:
      action:
        description: '具体操作: get_task, check_box, convert_config, upload_model, create_task,
          etc'
        type: string
      box_id:
        description: 关联的盒子ID
        type: integer
      details:
        additionalProperties: true
        description: 详细信息
        type: object
      duration:
        description: 操作耗时(毫秒)
        example: 1500
        type: integer
      error:
        description: 错误信息
        type: string
      id:
        description: 日志序号
        type: integer
      level:
        description: '日志级别: INFO, WARN, ERROR, DEBUG'
        type: string
      message:
        description: 日志消息
        type: string
      phase:
        description: '部署阶段: init, validate, prepare, deploy, verify, cleanup'
        type: string
      stack_trace:
        description: 错误堆栈（ERROR级别时）
        type: string
      success:
        description: 操作是否成功
        type: boolean
      task_id:
        description: 关联的任务ID
        type: integer
      timestamp:
        description: 日志时间
        type: string
    type: object
  models.DeploymentResult:
    properties:
      box_id:
        type: integer
      duration:
        example: 300
        type: integer
      end_time:
        type: string
      error_code:
        type: string
      message:
        type: string
      start_time:
        type: string
      status:
        type: string
      success:
        type: boolean
      task_id:
        type: integer
    type: object
  models.DeploymentTask:
    properties:
      completed_at:
        description: 完成时间
        type: string
      completed_tasks:
        description: 已完成任务数
        type: integer
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      created_by:
        description: 创建者信息
        type: integer
      deployment_config:
        description: 部署配置
        type: object
      description:
        description: 部署描述
        type: string
      error_message:
        description: 错误信息
        type: string
      estimated_time:
        description: 预计耗时(秒)
        example: 1800
        type: integer
      execution_logs:
        description: 日志和结果
        items:
          type: object
        type: array
      failed_tasks:
        description: 失败任务数
        type: integer
      id:
        description: 主键ID
        example: 1
        type: integer
      message:
        description: 当前状态消息
        type: string
      name:
        description: 部署任务名称
        type: string
      priority:
        description: 优先级(1-5)
        type: integer
      progress:
        description: 总体进度(0-100)
        type: number
      results:
        description: 部署结果
        items:
          type: object
        type: array
      skipped_tasks:
        description: 跳过任务数
        type: integer
      started_at:
        description: 时间记录
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.DeploymentTaskStatus'
        description: 部署状态
      target_box_ids:
        description: 部署配置
        items:
          type: integer
        type: array
      task_ids:
        description: 要部署的任务ID列表
        items:
          type: integer
        type: array
      total_tasks:
        description: 执行统计
        type: integer
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
    type: object
  models.DeploymentTaskStatus:
    enum:
    - pending
    - running
    - completed
    - failed
    - cancelled
    type: string
    x-enum-comments:
      DeploymentTaskStatusCancelled: 已取消
      DeploymentTaskStatusCompleted: 已完成
      DeploymentTaskStatusFailed: 失败
      DeploymentTaskStatusPending: 等待执行
      DeploymentTaskStatusRunning: 执行中
    x-enum-descriptions:
    - 等待执行
    - 执行中
    - 已完成
    - 失败
    - 已取消
    x-enum-varnames:
    - DeploymentTaskStatusPending
    - DeploymentTaskStatusRunning
    - DeploymentTaskStatusCompleted
    - DeploymentTaskStatusFailed
    - DeploymentTaskStatusCancelled
  models.DiskUsage:
    properties:
      device:
        type: string
      free:
        type: integer
      inodes_free:
        type: integer
      inodes_total:
        type: integer
      inodes_used:
        type: integer
      inodes_used_percent:
        type: number
      path:
        type: string
      total:
        type: integer
      type:
        type: string
      used:
        type: integer
      used_percent:
        type: number
    type: object
  models.ErrorDetail:
    properties:
      code:
        type: string
      context:
        additionalProperties:
          type: string
        type: object
      details:
        type: string
      message:
        type: string
      stack_trace:
        type: string
      timestamp:
        type: string
    type: object
  models.ExtractFrame:
    properties:
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      error_msg:
        type: string
      file_size:
        type: integer
      format:
        type: string
      frame_index:
        type: integer
      frame_path:
        description: 帧信息
        type: string
      height:
        type: integer
      id:
        description: 主键ID
        example: 1
        type: integer
      name:
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.ExtractFrameStatus'
        description: 状态信息
      task_id:
        description: 基本信息
        type: string
      timestamp:
        type: number
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
      user_id:
        type: integer
      video_source_id:
        description: 关联信息
        type: integer
      width:
        description: 图像属性
        type: integer
    type: object
  models.ExtractFrameStatus:
    enum:
    - extracted
    - error
    - deleted
    type: string
    x-enum-comments:
      ExtractFrameStatusDeleted: 已删除
      ExtractFrameStatusError: 错误
      ExtractFrameStatusExtracted: 已提取
    x-enum-descriptions:
    - 已提取
    - 错误
    - 已删除
    x-enum-varnames:
    - ExtractFrameStatusExtracted
    - ExtractFrameStatusError
    - ExtractFrameStatusDeleted
  models.ExtractTask:
    properties:
      completed_at:
        type: string
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      description:
        type: string
      duration:
        description: 抽帧时长(秒)
        type: integer
      error_msg:
        type: string
      extracted_count:
        description: 实际提取的帧数
        type: integer
      format:
        description: 图片格式
        type: string
      frame_count:
        description: 抽帧配置
        type: integer
      id:
        description: 主键ID
        example: 1
        type: integer
      interval:
        description: 抽帧间隔(秒)
        type: integer
      name:
        type: string
      output_dir:
        description: 输出信息
        type: string
      progress:
        type: integer
      quality:
        description: 图片质量(1-31,越小质量越高)
        type: integer
      start_time:
        description: 开始时间(秒)
        type: integer
      started_at:
        description: 执行信息
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.ExtractTaskStatus'
        description: 状态信息
      task_id:
        description: 任务信息
        type: string
      total_size:
        description: 总文件大小
        type: integer
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
      user_id:
        type: integer
      video_file_id:
        type: integer
      video_source_id:
        description: 关联信息
        type: integer
    type: object
  models.ExtractTaskStatus:
    enum:
    - pending
    - extracting
    - completed
    - stopped
    - failed
    type: string
    x-enum-comments:
      ExtractTaskStatusCompleted: 已完成
      ExtractTaskStatusExtracting: 抽帧中
      ExtractTaskStatusFailed: 失败
      ExtractTaskStatusPending: 待开始
      ExtractTaskStatusStopped: 已停止
    x-enum-descriptions:
    - 待开始
    - 抽帧中
    - 已完成
    - 已停止
    - 失败
    x-enum-varnames:
    - ExtractTaskStatusPending
    - ExtractTaskStatusExtracting
    - ExtractTaskStatusCompleted
    - ExtractTaskStatusStopped
    - ExtractTaskStatusFailed
  models.FileLimits:
    properties:
      image_file_max_size:
        description: 图片文件最大大小
        type: string
      model_file_max_size:
        description: 模型文件最大大小
        type: string
      supported_image_formats:
        description: 支持的图片格式
        items:
          type: string
        type: array
      supported_model_formats:
        description: 支持的模型格式
        items:
          type: string
        type: array
    type: object
  models.FileType:
    enum:
    - backend_program
    - frontend_ui
    type: string
    x-enum-comments:
      FileTypeBackendProgram: 后台程序文件 (box-app.soc)
      FileTypeFrontendUI: 前台界面文件 (dist.zip)
    x-enum-descriptions:
    - 后台程序文件 (box-app.soc)
    - 前台界面文件 (dist.zip)
    x-enum-varnames:
    - FileTypeBackendProgram
    - FileTypeFrontendUI
  models.ForwardInfo:
    properties:
      enabled:
        type: boolean
      host:
        type: string
      password:
        type: string
      port:
        type: integer
      topic:
        description: MQTT主题或HTTP路径
        type: string
      type:
        description: mqtt, http_post, websocket
        type: string
      username:
        type: string
    type: object
  models.Hardware:
    properties:
      cpu_cores:
        type: integer
      cpu_logical_cores:
        type: integer
      cpu_model_name:
        type: string
      hostname:
        type: string
      kernel_arch:
        type: string
      kernel_version:
        type: string
      os:
        type: string
      platform:
        type: string
      platform_family:
        type: string
      platform_version:
        type: string
      sdk_version:
        type: string
      software_build_time:
        type: string
      software_version:
        type: string
    type: object
  models.InferenceTask:
    properties:
      businessProcess:
        description: Lua脚本路径
        type: string
      forwardInfo:
        allOf:
        - $ref: '#/definitions/models.ForwardInfo'
        description: 为了向后兼容，保留单个ForwardInfo
      forwardInfos:
        items:
          $ref: '#/definitions/models.ForwardInfo'
        type: array
      modelName:
        description: 保持向后兼容
        type: string
      originalModelId:
        type: string
      roiIds:
        description: 关联的ROI ID列表
        items:
          type: integer
        type: array
      rtspPushUrl:
        type: string
      sendSSEImage:
        type: boolean
      threshold:
        type: number
      type:
        description: detection, segmentation, classification, custom
        type: string
    type: object
  models.MetaDefaults:
    properties:
      conf_threshold:
        description: 默认置信度阈值
        type: number
      hardware:
        description: 默认硬件
        type: string
      nms_threshold:
        description: 默认NMS阈值
        type: number
      type:
        description: 默认类型
        type: string
      version:
        description: 默认版本
        type: string
    type: object
  models.ModelBoxDeployment:
    description: 记录转换后模型在哪些盒子上已成功部署
    properties:
      box:
        $ref: '#/definitions/models.Box'
      box_id:
        description: 盒子ID
        type: integer
      converted_model:
        allOf:
        - $ref: '#/definitions/models.ConvertedModel'
        description: 关联对象
      converted_model_id:
        description: 关联信息
        type: integer
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      deployed_at:
        description: 部署信息
        type: string
      deployment_path:
        description: 部署路径
        type: string
      id:
        description: 主键ID
        example: 1
        type: integer
      is_verified:
        description: 验证信息
        type: boolean
      last_verified_at:
        description: 最后验证时间
        type: string
      model_key:
        description: 模型Key
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.ModelBoxDeploymentStatus'
        description: 部署状态
      task_id:
        description: 部署任务ID
        type: string
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
      verification_msg:
        description: 验证消息
        type: string
      version:
        description: 部署时的模型版本
        type: string
    type: object
  models.ModelBoxDeploymentStatus:
    enum:
    - active
    - inactive
    - removed
    - error
    type: string
    x-enum-comments:
      ModelBoxDeploymentStatusActive: 活跃（可用）
      ModelBoxDeploymentStatusError: 错误状态
      ModelBoxDeploymentStatusInactive: 不活跃（盒子离线等）
      ModelBoxDeploymentStatusRemoved: 已移除
    x-enum-descriptions:
    - 活跃（可用）
    - 不活跃（盒子离线等）
    - 已移除
    - 错误状态
    x-enum-varnames:
    - ModelBoxDeploymentStatusActive
    - ModelBoxDeploymentStatusInactive
    - ModelBoxDeploymentStatusRemoved
    - ModelBoxDeploymentStatusError
  models.ModelDeploymentItem:
    properties:
      box:
        $ref: '#/definitions/models.Box'
      box_address:
        description: 盒子地址
        type: string
      box_id:
        description: 盒子ID
        type: integer
      converted_model:
        allOf:
        - $ref: '#/definitions/models.ConvertedModel'
        description: 关联对象
      converted_model_id:
        description: 转换后模型ID
        type: integer
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      end_time:
        description: 结束时间
        type: string
      error_message:
        description: 错误信息
        type: string
      id:
        description: 主键ID
        example: 1
        type: integer
      model_exists:
        description: 模型是否已存在于盒子
        type: boolean
      model_key:
        description: 部署信息
        type: string
      start_time:
        description: 开始时间
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.ModelDeploymentItemStatus'
        description: 部署状态
      task:
        $ref: '#/definitions/models.ModelDeploymentTask'
      task_id:
        description: 关联信息
        type: string
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
      upload_needed:
        description: 是否需要上传
        type: boolean
      upload_size:
        description: 上传文件大小
        type: integer
    type: object
  models.ModelDeploymentItemStatus:
    enum:
    - pending
    - checking
    - uploading
    - completed
    - failed
    - skipped
    type: string
    x-enum-comments:
      ModelDeploymentItemStatusChecking: 检查模型
      ModelDeploymentItemStatusCompleted: 已完成
      ModelDeploymentItemStatusFailed: 失败
      ModelDeploymentItemStatusPending: 待处理
      ModelDeploymentItemStatusSkipped: 跳过
      ModelDeploymentItemStatusUploading: 上传中
    x-enum-descriptions:
    - 待处理
    - 检查模型
    - 上传中
    - 已完成
    - 失败
    - 跳过
    x-enum-varnames:
    - ModelDeploymentItemStatusPending
    - ModelDeploymentItemStatusChecking
    - ModelDeploymentItemStatusUploading
    - ModelDeploymentItemStatusCompleted
    - ModelDeploymentItemStatusFailed
    - ModelDeploymentItemStatusSkipped
  models.ModelDeploymentStatus:
    enum:
    - pending
    - running
    - completed
    - failed
    - cancelled
    type: string
    x-enum-comments:
      ModelDeploymentStatusCancelled: 已取消
      ModelDeploymentStatusCompleted: 已完成
      ModelDeploymentStatusFailed: 失败
      ModelDeploymentStatusPending: 待处理
      ModelDeploymentStatusRunning: 运行中
    x-enum-descriptions:
    - 待处理
    - 运行中
    - 已完成
    - 失败
    - 已取消
    x-enum-varnames:
    - ModelDeploymentStatusPending
    - ModelDeploymentStatusRunning
    - ModelDeploymentStatusCompleted
    - ModelDeploymentStatusFailed
    - ModelDeploymentStatusCancelled
  models.ModelDeploymentTask:
    properties:
      boxes:
        items:
          $ref: '#/definitions/models.Box'
        type: array
      converted_models:
        description: 关联对象
        items:
          $ref: '#/definitions/models.ConvertedModel'
        type: array
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      deployment_items:
        items:
          $ref: '#/definitions/models.ModelDeploymentItem'
        type: array
      end_time:
        description: 结束时间
        type: string
      error_message:
        description: 错误信息
        type: string
      failed_items:
        description: 失败部署项数
        type: integer
      id:
        description: 主键ID
        example: 1
        type: integer
      logs:
        description: 部署日志
        type: string
      name:
        description: 任务名称
        type: string
      progress:
        description: 进度 (0-100)
        type: integer
      skipped_items:
        description: 跳过部署项数 (已存在)
        type: integer
      start_time:
        description: 开始时间
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.ModelDeploymentStatus'
        description: 任务状态
      success_items:
        description: 成功部署项数
        type: integer
      task_id:
        description: 任务标识
        type: string
      total_items:
        description: 部署结果统计
        type: integer
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
      user_id:
        description: 创建用户ID
        type: integer
    type: object
  models.ModelTaskType:
    enum:
    - detection
    - segmentation
    type: string
    x-enum-comments:
      ModelTaskTypeDetection: 目标检测
      ModelTaskTypeSegmentation: 图像分割
    x-enum-descriptions:
    - 目标检测
    - 图像分割
    x-enum-varnames:
    - ModelTaskTypeDetection
    - ModelTaskTypeSegmentation
  models.OriginalModel:
    description: 原始模型数据结构，用于管理用户上传的 pt/onnx 格式模型
    properties:
      author:
        description: 作者
        example: 张三
        type: string
      converted_models:
        description: 转换关联
        items:
          $ref: '#/definitions/models.ConvertedModel'
        type: array
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      description:
        description: 模型描述
        example: YOLO v5 目标检测模型
        type: string
      download_count:
        description: 下载次数
        example: 10
        type: integer
      file_md5:
        description: 文件MD5校验和
        example: d41d8cd98f00b204e9800998ecf8427e
        type: string
      file_name:
        description: 文件信息
        example: yolo-v5.pt
        type: string
      file_path:
        description: 文件存储路径
        example: /data/models/original/2025/01/28/yolo-v5-abc123.pt
        type: string
      file_sha256:
        description: 文件SHA256校验和
        example: e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855
        type: string
      file_size:
        description: 文件大小（字节）
        example: 52428800
        type: integer
      framework:
        description: 模型框架
        example: pytorch
        type: string
      id:
        description: 主键ID
        example: 1
        type: integer
      input_channels:
        description: 输入通道数
        example: 3
        type: integer
      input_height:
        description: 输入高度
        example: 640
        type: integer
      input_width:
        description: 输入宽度
        example: 640
        type: integer
      is_validated:
        description: 是否已验证
        example: false
        type: boolean
      last_accessed:
        description: 最后访问时间
        example: "2025-01-28T12:00:00Z"
        type: string
      model_format:
        description: 模型格式
        example: pytorch
        type: string
      model_type:
        allOf:
        - $ref: '#/definitions/models.OriginalModelType'
        description: 模型属性
        example: pt
      model_url:
        description: 模型源地址
        example: https://github.com/ultralytics/yolov5
        type: string
      name:
        description: 基本信息
        example: yolo-v5
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.OriginalModelStatus'
        description: 状态管理
        example: uploading
      storage_class:
        description: 存储级别 (hot/warm/cold)
        example: hot
        type: string
      tags:
        description: 元数据
        example: object_detection,yolo,pytorch
        type: string
      task_type:
        allOf:
        - $ref: '#/definitions/models.ModelTaskType'
        description: AI任务属性
        example: detection
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
      upload_progress:
        description: 上传进度 (0-100)
        example: 100
        type: integer
      user_id:
        description: 访问控制
        example: 1
        type: integer
      validation_msg:
        description: 验证信息
        example: ""
        type: string
      version:
        description: 版本号
        example: 1.0.0
        type: string
    required:
    - model_type
    - name
    - version
    type: object
  models.OriginalModelStatus:
    enum:
    - uploading
    - failed
    - ready
    type: string
    x-enum-comments:
      OriginalModelStatusFailed: 失败
      OriginalModelStatusReady: 就绪
      OriginalModelStatusUploading: 上传中
    x-enum-descriptions:
    - 上传中
    - 失败
    - 就绪
    x-enum-varnames:
    - OriginalModelStatusUploading
    - OriginalModelStatusFailed
    - OriginalModelStatusReady
  models.OriginalModelType:
    enum:
    - pt
    - onnx
    type: string
    x-enum-comments:
      OriginalModelTypeONNX: ONNX 模型
      OriginalModelTypePT: PyTorch 模型
    x-enum-descriptions:
    - PyTorch 模型
    - ONNX 模型
    x-enum-varnames:
    - OriginalModelTypePT
    - OriginalModelTypeONNX
  models.OutputSettings:
    properties:
      sendFullImage:
        description: 0=否，1=是
        type: integer
    type: object
  models.PackageStatus:
    enum:
    - pending
    - verifying
    - ready
    - failed
    - archived
    type: string
    x-enum-comments:
      PackageStatusArchived: 已归档
      PackageStatusFailed: 验证失败
      PackageStatusPending: 待处理
      PackageStatusReady: 就绪
      PackageStatusVerifying: 验证中
    x-enum-descriptions:
    - 待处理
    - 验证中
    - 就绪
    - 验证失败
    - 已归档
    x-enum-varnames:
    - PackageStatusPending
    - PackageStatusVerifying
    - PackageStatusReady
    - PackageStatusFailed
    - PackageStatusArchived
  models.Point:
    properties:
      x:
        type: integer
      "y":
        type: integer
    type: object
  models.ROIConfig:
    properties:
      areas:
        description: 多边形顶点（可选）
        items:
          $ref: '#/definitions/models.Point'
        type: array
      height:
        description: 区域高度
        type: integer
      id:
        type: integer
      name:
        description: ROI名称
        type: string
      width:
        description: 区域宽度
        type: integer
      x:
        description: X坐标
        type: integer
      "y":
        description: Y坐标
        type: integer
    type: object
  models.RecordTask:
    properties:
      actual_duration:
        type: number
      completed_at:
        type: string
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      duration:
        description: 录制时长(分钟)
        type: integer
      error_msg:
        type: string
      file_size:
        type: integer
      id:
        description: 主键ID
        example: 1
        type: integer
      name:
        type: string
      output_path:
        description: 输出信息
        type: string
      progress:
        type: integer
      started_at:
        description: 执行信息
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.RecordTaskStatus'
        description: 状态信息
      task_id:
        description: 任务信息
        type: string
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
      user_id:
        type: integer
      video_source_id:
        description: 关联信息
        type: integer
    type: object
  models.RecordTaskStatus:
    enum:
    - pending
    - recording
    - completed
    - stopped
    - failed
    type: string
    x-enum-comments:
      RecordTaskStatusCompleted: 已完成
      RecordTaskStatusFailed: 失败
      RecordTaskStatusPending: 待开始
      RecordTaskStatusRecording: 录制中
      RecordTaskStatusStopped: 已停止
    x-enum-descriptions:
    - 待开始
    - 录制中
    - 已完成
    - 已停止
    - 失败
    x-enum-varnames:
    - RecordTaskStatusPending
    - RecordTaskStatusRecording
    - RecordTaskStatusCompleted
    - RecordTaskStatusStopped
    - RecordTaskStatusFailed
  models.Resources:
    properties:
      board_temperature:
        type: number
      core_temperature:
        type: number
      cpu_percent:
        items:
          type: number
        type: array
      cpu_total:
        type: integer
      cpu_used:
        type: number
      cpu_used_percent:
        type: number
      disk_data:
        items:
          $ref: '#/definitions/models.DiskUsage'
        type: array
      io_count:
        type: integer
      io_read_bytes:
        type: integer
      io_read_time:
        type: integer
      io_write_bytes:
        type: integer
      io_write_time:
        type: integer
      load_usage_percent:
        type: number
      load1:
        type: number
      load5:
        type: number
      load15:
        type: number
      memory_available:
        type: integer
      memory_total:
        type: integer
      memory_used:
        type: integer
      memory_used_percent:
        type: number
      net_bytes_recv:
        type: integer
      net_bytes_sent:
        type: integer
      npu_memory_total:
        type: integer
      npu_memory_used:
        type: integer
      procs:
        type: integer
      shot_time:
        type: string
      swap_memory_available:
        type: integer
      swap_memory_total:
        type: integer
      swap_memory_used:
        type: integer
      swap_memory_used_percent:
        type: number
      time_since_uptime:
        type: string
      tpu_used:
        type: integer
      uptime:
        type: integer
      vpp_memory_total:
        type: integer
      vpp_memory_used:
        type: integer
      vpu_memory_total:
        type: integer
      vpu_memory_used:
        type: integer
    type: object
  models.Task:
    properties:
      affinity_tags:
        description: 亲和性标签，用于匹配盒子标签
        items:
          type: string
        type: array
      auto_schedule:
        description: 任务调度和亲和性配置
        type: boolean
      auto_start:
        type: boolean
      box:
        allOf:
        - $ref: '#/definitions/models.Box'
        description: 关联关系
      box_id:
        description: 修改为指针类型，允许为空
        type: integer
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      created_by:
        description: 创建者
        type: integer
      deployment_id:
        description: 部署ID
        type: string
      description:
        description: 任务描述
        type: string
      external_id:
        description: 盒子上的原始任务ID（同步时使用）
        type: string
      forward_failed:
        type: integer
      forward_success:
        type: integer
      id:
        description: 主键ID
        example: 1
        type: integer
      inference_count:
        type: integer
      inference_tasks:
        items:
          $ref: '#/definitions/models.InferenceTask'
        type: array
      is_synchronized:
        description: 是否已同步
        type: boolean
      last_error:
        type: string
      last_heartbeat:
        description: 最后心跳时间
        type: string
      max_retries:
        description: 最大重试次数
        type: integer
      name:
        description: 任务名称
        type: string
      output_settings:
        allOf:
        - $ref: '#/definitions/models.OutputSettings'
        description: 任务配置
      priority:
        description: 优先级(1-5)
        type: integer
      progress:
        description: 进度(0-100)
        type: number
      retry_count:
        description: 重试次数
        type: integer
      rois:
        items:
          $ref: '#/definitions/models.ROIConfig'
        type: array
      scheduled_at:
        description: 计划执行时间
        type: string
      skip_frame:
        type: integer
      source:
        description: 任务来源：manual(手动创建), synced(从盒子同步)
        type: string
      start_time:
        description: 运行统计
        type: string
      status:
        $ref: '#/definitions/models.TaskStatus'
      stop_time:
        type: string
      sub_status:
        description: 子状态
        type: string
      tags:
        description: REQ-005 新增字段
        items:
          type: string
        type: array
      task_id:
        description: 在盒子上的任务ID
        type: string
      total_frames:
        type: integer
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
      useROItoInference:
        description: 是否使用ROI进行推理
        type: boolean
      video_source:
        $ref: '#/definitions/models.VideoSource'
      video_source_id:
        description: 关联的视频源ID
        type: integer
    type: object
  models.TaskStatus:
    enum:
    - pending
    - scheduled
    - running
    - completed
    - failed
    - cancelled
    - paused
    - stopped
    - stopping
    type: string
    x-enum-comments:
      TaskStatusCancelled: 已取消
      TaskStatusCompleted: 已完成
      TaskStatusFailed: 执行失败
      TaskStatusPaused: 已暂停
      TaskStatusPending: 待执行
      TaskStatusRunning: 执行中
      TaskStatusScheduled: 已调度
      TaskStatusStopped: 已停止
      TaskStatusStopping: 停止中
    x-enum-descriptions:
    - 待执行
    - 已调度
    - 执行中
    - 已完成
    - 执行失败
    - 已取消
    - 已暂停
    - 已停止
    - 停止中
    x-enum-varnames:
    - TaskStatusPending
    - TaskStatusScheduled
    - TaskStatusRunning
    - TaskStatusCompleted
    - TaskStatusFailed
    - TaskStatusCancelled
    - TaskStatusPaused
    - TaskStatusStopped
    - TaskStatusStopping
  models.UpgradeFile:
    properties:
      checksum:
        description: 文件校验和
        type: string
      content_type:
        description: MIME类型
        type: string
      name:
        description: 文件名
        type: string
      path:
        description: 存储路径
        type: string
      size:
        description: 文件大小
        type: integer
      type:
        allOf:
        - $ref: '#/definitions/models.FileType'
        description: 文件类型
      uploaded_at:
        description: 上传时间
        type: string
    type: object
  models.UpgradePackage:
    properties:
      checksum:
        description: 整包校验和
        type: string
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      description:
        description: 描述
        type: string
      download_count:
        description: 统计信息
        type: integer
      files:
        description: 文件信息
        items:
          $ref: '#/definitions/models.UpgradeFile'
        type: array
      id:
        description: 主键ID
        example: 1
        type: integer
      is_prerelease:
        description: 是否为预发布版本
        type: boolean
      max_box_version:
        description: 最大支持的盒子版本
        type: string
      min_box_version:
        description: 兼容性
        type: string
      name:
        description: 升级包名称
        type: string
      release_notes:
        description: 发布信息
        type: string
      released_at:
        description: 发布时间
        type: string
      released_by:
        description: 发布者
        type: integer
      status:
        allOf:
        - $ref: '#/definitions/models.PackageStatus'
        description: 状态
      total_size:
        description: 总大小(bytes)
        type: integer
      type:
        allOf:
        - $ref: '#/definitions/models.UpgradePackageType'
        description: 升级包类型
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
      upgrade_count:
        description: 升级次数
        type: integer
      version:
        description: 版本号
        type: string
    type: object
  models.UpgradePackageType:
    enum:
    - backend
    - frontend
    type: string
    x-enum-comments:
      PackageTypeBackend: 仅后台程序
      PackageTypeFrontend: 仅前台界面
    x-enum-descriptions:
    - 仅后台程序
    - 仅前台界面
    x-enum-varnames:
    - PackageTypeBackend
    - PackageTypeFrontend
  models.UpgradeStatus:
    enum:
    - pending
    - running
    - completed
    - failed
    - cancelled
    - rolledback
    type: string
    x-enum-comments:
      UpgradeStatusCancelled: 已取消
      UpgradeStatusCompleted: 已完成
      UpgradeStatusFailed: 执行失败
      UpgradeStatusPending: 待执行
      UpgradeStatusRolledback: 已回滚
      UpgradeStatusRunning: 执行中
    x-enum-descriptions:
    - 待执行
    - 执行中
    - 已完成
    - 执行失败
    - 已取消
    - 已回滚
    x-enum-varnames:
    - UpgradeStatusPending
    - UpgradeStatusRunning
    - UpgradeStatusCompleted
    - UpgradeStatusFailed
    - UpgradeStatusCancelled
    - UpgradeStatusRolledback
  models.UpgradeTask:
    properties:
      batch_upgrade_task:
        $ref: '#/definitions/models.BatchUpgradeTask'
      batch_upgrade_task_id:
        description: 批量任务关联
        type: integer
      box:
        allOf:
        - $ref: '#/definitions/models.Box'
        description: 关联关系
      box_id:
        type: integer
      can_rollback:
        description: 回滚信息
        type: boolean
      completed_at:
        type: string
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      created_by:
        description: 创建者
        type: integer
      error_details:
        $ref: '#/definitions/models.ErrorDetail'
      error_message:
        description: 错误信息
        type: string
      force:
        type: boolean
      id:
        description: 主键ID
        example: 1
        type: integer
      name:
        type: string
      program_file:
        description: 兼容字段，逐步废弃
        type: string
      progress:
        description: 0-100
        type: integer
      rollback_task_id:
        description: 关联的回滚任务ID
        type: integer
      rollback_version:
        type: string
      started_at:
        description: 时间相关
        type: string
      status:
        $ref: '#/definitions/models.UpgradeStatus'
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
      upgrade_package:
        $ref: '#/definitions/models.UpgradePackage'
      upgrade_package_id:
        description: 关联升级包
        type: integer
      version_from:
        type: string
      version_to:
        type: string
    type: object
  models.VideoFile:
    properties:
      bitrate:
        type: integer
      codec:
        type: string
      converted_path:
        type: string
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      description:
        type: string
      display_name:
        type: string
      duration:
        type: number
      error_msg:
        type: string
      file_size:
        type: integer
      format:
        type: string
      frame_rate:
        type: number
      height:
        type: integer
      id:
        description: 主键ID
        example: 1
        type: integer
      name:
        description: 基本信息
        type: string
      original_file_name:
        description: 存储用户上传时的原始文件名
        type: string
      original_path:
        description: 文件信息
        type: string
      play_url:
        type: string
      process_progress:
        type: integer
      status:
        allOf:
        - $ref: '#/definitions/models.VideoFileStatus'
        description: 处理状态
      stream_app:
        description: ZLMediaKit 相关
        type: string
      stream_id:
        type: string
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
      user_id:
        type: integer
      video_source_id:
        description: 关联信息
        type: integer
      width:
        description: 视频属性
        type: integer
    type: object
  models.VideoFileStatus:
    enum:
    - uploaded
    - converting
    - completed
    - ready
    - failed
    - error
    type: string
    x-enum-comments:
      VideoFileStatusCompleted: 转换完成
      VideoFileStatusConverting: 转换中
      VideoFileStatusError: 错误
      VideoFileStatusFailed: 失败
      VideoFileStatusReady: 就绪
      VideoFileStatusUploaded: 已上传
    x-enum-descriptions:
    - 已上传
    - 转换中
    - 转换完成
    - 就绪
    - 失败
    - 错误
    x-enum-varnames:
    - VideoFileStatusUploaded
    - VideoFileStatusConverting
    - VideoFileStatusCompleted
    - VideoFileStatusReady
    - VideoFileStatusFailed
    - VideoFileStatusError
  models.VideoSource:
    properties:
      created_at:
        description: 创建时间
        example: "2025-01-26T12:00:00Z"
        type: string
      description:
        type: string
      error_msg:
        type: string
      id:
        description: 主键ID
        example: 1
        type: integer
      last_active:
        type: string
      name:
        description: 基本信息
        type: string
      password:
        type: string
      play_url:
        description: 播放地址
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.VideoSourceStatus'
        description: 状态信息
      stream_id:
        description: ZLMediaKit 流信息
        type: string
      type:
        $ref: '#/definitions/models.VideoSourceType'
      updated_at:
        description: 更新时间
        example: "2025-01-26T12:00:00Z"
        type: string
      url:
        description: 连接信息
        type: string
      user_id:
        description: 关联信息
        type: integer
      username:
        type: string
      video_file_id:
        description: 关联的视频文件ID（仅文件类型使用）
        type: integer
    type: object
  models.VideoSourceStatus:
    enum:
    - inactive
    - active
    - error
    type: string
    x-enum-comments:
      VideoSourceStatusActive: 活跃
      VideoSourceStatusError: 错误
      VideoSourceStatusInactive: 未激活
    x-enum-descriptions:
    - 未激活
    - 活跃
    - 错误
    x-enum-varnames:
    - VideoSourceStatusInactive
    - VideoSourceStatusActive
    - VideoSourceStatusError
  models.VideoSourceType:
    enum:
    - stream
    - file
    type: string
    x-enum-comments:
      VideoSourceTypeFile: 视频文件
      VideoSourceTypeStream: 实时流
    x-enum-descriptions:
    - 实时流
    - 视频文件
    x-enum-varnames:
    - VideoSourceTypeStream
    - VideoSourceTypeFile
  service.BoxScore:
    properties:
      box_id:
        type: integer
      box_name:
        type: string
      has_capacity:
        type: boolean
      is_online:
        type: boolean
      reasons:
        items:
          type: string
        type: array
      score:
        type: number
      tag_matches:
        type: integer
    type: object
  service.ConnectionStats:
    properties:
      active_since:
        type: string
      connections_by_channel:
        additionalProperties:
          type: integer
        type: object
      connections_by_user_id:
        additionalProperties:
          type: integer
        type: object
      total_connections:
        type: integer
    type: object
  service.ConversionProgress:
    properties:
      elapsed_time:
        type: string
      error_message:
        type: string
      progress:
        type: integer
      progress_message:
        type: string
      start_time:
        type: string
      status:
        type: string
      task_id:
        type: string
    type: object
  service.ConversionStatistics:
    properties:
      average_execution_time:
        description: 格式如"25m30s"
        type: string
      completed_tasks:
        type: integer
      failed_tasks:
        type: integer
      pending_tasks:
        type: integer
      running_tasks:
        type: integer
      success_rate:
        type: number
      total_tasks:
        type: integer
    type: object
  service.ConvertedModelStatistics:
    properties:
      active_models:
        type: integer
      chip_stats:
        additionalProperties:
          format: int64
          type: integer
        type: object
      deployed_models:
        type: integer
      status_stats:
        additionalProperties:
          format: int64
          type: integer
        type: object
      total_models:
        type: integer
    type: object
  service.CreateConversionTaskRequest:
    properties:
      auto_start:
        description: 是否自动启动
        example: true
        type: boolean
      created_by:
        description: 创建用户ID
        example: 1
        type: integer
      original_model_id:
        description: 原始模型ID
        example: 1
        type: integer
      quantizations:
        description: 量化类型列表（可选，默认F16）
        example:
        - F16
        - F32
        items:
          type: string
        type: array
      target_chips:
        description: 目标芯片列表（最多2个）
        example:
        - BM1684X
        items:
          type: string
        type: array
      target_yolo_version:
        description: 目标YOLO版本，默认yolov8
        example: yolov8
        type: string
    required:
    - created_by
    - original_model_id
    - target_chips
    type: object
  service.CreateConvertedModelRequest:
    properties:
      conversion_task_id:
        type: string
      convert_params:
        type: string
      description:
        type: string
      display_name:
        type: string
      file_md5:
        type: string
      file_name:
        type: string
      file_path:
        type: string
      file_sha256:
        type: string
      file_size:
        type: integer
      name:
        type: string
      original_model_id:
        type: integer
      quantization:
        type: string
      tags:
        items:
          type: string
        type: array
      user_id:
        type: integer
      version:
        type: string
    required:
    - file_name
    - file_path
    - name
    - original_model_id
    - user_id
    - version
    type: object
  service.CreateExtractTaskRequest:
    properties:
      description:
        type: string
      duration:
        type: integer
      format:
        default: jpg
        type: string
      frame_count:
        type: integer
      interval:
        type: integer
      name:
        type: string
      quality:
        default: 2
        type: integer
      start_time:
        type: integer
      user_id:
        type: integer
      video_file_id:
        type: integer
      video_source_id:
        type: integer
    required:
    - name
    - user_id
    type: object
  service.CreateRecordTaskRequest:
    properties:
      duration:
        type: integer
      name:
        type: string
      user_id:
        type: integer
      video_source_id:
        type: integer
    required:
    - duration
    - name
    - user_id
    - video_source_id
    type: object
  service.CreateVideoSourceRequest:
    properties:
      description:
        type: string
      name:
        type: string
      password:
        type: string
      stream_id:
        type: string
      type:
        $ref: '#/definitions/models.VideoSourceType'
      url:
        description: 流类型必需，文件类型可选
        type: string
      user_id:
        type: integer
      username:
        type: string
      video_file_id:
        description: 文件类型视频源关联的文件ID
        type: integer
    required:
    - name
    - type
    - user_id
    type: object
  service.DeploymentProgress:
    properties:
      completed_tasks:
        type: integer
      deployment_id:
        type: integer
      estimated_time:
        type: string
      failed_tasks:
        type: integer
      message:
        type: string
      progress:
        type: number
      skipped_tasks:
        type: integer
      total_tasks:
        type: integer
    type: object
  service.FrameImageInfo:
    properties:
      content_type:
        type: string
      file_name:
        type: string
      file_path:
        type: string
      file_size:
        type: integer
      format:
        type: string
      height:
        type: integer
      timestamp:
        type: string
      width:
        type: integer
    type: object
  service.GetModelListResponse:
    properties:
      models:
        items:
          $ref: '#/definitions/models.OriginalModel'
        type: array
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  service.ModelStatisticsResponse:
    properties:
      by_status:
        additionalProperties:
          format: int64
          type: integer
        type: object
      by_type:
        additionalProperties:
          format: int64
          type: integer
        type: object
      public:
        type: integer
      total:
        type: integer
      total_downloads:
        type: integer
    type: object
  service.RecordTaskStatistics:
    properties:
      completed_count:
        type: integer
      failed_count:
        type: integer
      pending_count:
        type: integer
      recording_count:
        type: integer
      stopped_count:
        type: integer
      total_count:
        type: integer
    type: object
  service.ScanTask:
    properties:
      created_by:
        type: integer
      current_ip:
        type: string
      end_time:
        type: string
      error_message:
        type: string
      found_boxes:
        type: integer
      ip_range:
        type: string
      port:
        type: integer
      progress:
        type: number
      scan_id:
        type: string
      scanned_ips:
        type: integer
      start_time:
        type: string
      status:
        description: scanning, completed, failed, cancelled
        type: string
      total_ips:
        type: integer
      update_time:
        type: string
    type: object
  service.ScheduleResult:
    properties:
      failed_tasks:
        type: integer
      scheduled_tasks:
        type: integer
      summary:
        additionalProperties:
          type: integer
        type: object
      task_results:
        items:
          $ref: '#/definitions/service.TaskScheduleResult'
        type: array
      total_tasks:
        type: integer
    type: object
  service.ScreenshotResponse:
    properties:
      base64_data:
        description: 图片的base64编码
        type: string
      content_type:
        description: 内容类型，如image/jpeg
        type: string
      file_size:
        description: 文件大小（字节）
        type: integer
      height:
        description: 图片高度
        type: integer
      timestamp:
        description: 截图时间戳
        type: string
      width:
        description: 图片宽度
        type: integer
    type: object
  service.SearchModelResponse:
    properties:
      models:
        items:
          $ref: '#/definitions/models.OriginalModel'
        type: array
      page:
        type: integer
      page_size:
        type: integer
      total:
        type: integer
      total_pages:
        type: integer
    type: object
  service.StorageStatisticsResponse:
    properties:
      by_storage_class:
        additionalProperties:
          additionalProperties:
            format: int64
            type: integer
          type: object
        type: object
      by_type:
        additionalProperties:
          additionalProperties:
            format: int64
            type: integer
          type: object
        type: object
      total_size:
        type: integer
    type: object
  service.TaskScheduleResult:
    properties:
      box_id:
        type: integer
      box_name:
        type: string
      candidates:
        items:
          $ref: '#/definitions/service.BoxScore'
        type: array
      reason:
        type: string
      score:
        type: number
      success:
        type: boolean
      task_id:
        type: integer
      task_name:
        type: string
    type: object
  service.TaskSyncDetail:
    properties:
      action:
        description: created, updated, skipped, error
        type: string
      error:
        type: string
      external_id:
        type: string
      status:
        type: string
      task_id:
        type: string
      task_name:
        type: string
    type: object
  service.TaskSyncResult:
    properties:
      box_id:
        type: integer
      box_name:
        type: string
      details:
        items:
          $ref: '#/definitions/service.TaskSyncDetail'
        type: array
      error_tasks:
        type: integer
      skipped_tasks:
        type: integer
      sync_time:
        type: string
      synced_tasks:
        type: integer
      total_tasks:
        type: integer
      updated_tasks:
        type: integer
    type: object
  service.UpdateConvertedModelRequest:
    properties:
      description:
        type: string
      display_name:
        type: string
      tags:
        items:
          type: string
        type: array
    type: object
  service.UpdateModelRequest:
    properties:
      author:
        type: string
      description:
        type: string
      framework:
        type: string
      input_channels:
        type: integer
      input_height:
        type: integer
      input_width:
        type: integer
      model_type:
        $ref: '#/definitions/models.OriginalModelType'
      model_url:
        type: string
      name:
        type: string
      tags:
        items:
          type: string
        type: array
      task_type:
        $ref: '#/definitions/models.ModelTaskType'
    type: object
  service.UpdateVideoFileRequest:
    properties:
      description:
        type: string
      display_name:
        type: string
      name:
        type: string
    type: object
  service.UpdateVideoSourceRequest:
    properties:
      description:
        type: string
      name:
        type: string
      password:
        type: string
      stream_id:
        type: string
      url:
        type: string
      username:
        type: string
      video_file_id:
        description: 指向指针的指针，支持设置为null
        type: integer
    type: object
info:
  contact: {}
  description: AI盒子管理系统后端服务，提供盒子管理、模型管理、任务管理、用户管理等功能
  title: AI盒子管理系统 API
  version: "1.0"
paths:
  /api/conversion/statistics:
    get:
      consumes:
      - application/json
      description: 获取转换任务的统计信息
      parameters:
      - description: 用户ID
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.ConversionStatistics'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取转换统计
      tags:
      - 模型转换
  /api/conversion/tasks:
    get:
      consumes:
      - application/json
      description: 分页获取转换任务列表，支持多条件搜索
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 任务状态
        enum:
        - pending
        - running
        - completed
        - failed
        in: query
        name: status
        type: string
      - description: 用户ID
        in: query
        name: user_id
        type: integer
      - description: 原始模型ID
        in: query
        name: original_model_id
        type: integer
      - description: 搜索关键词
        in: query
        name: keyword
        type: string
      - description: 目标芯片
        enum:
        - bm1684
        - bm1684x
        - bm1688
        in: query
        name: target_chip
        type: string
      - description: 开始时间（RFC3339格式）
        in: query
        name: start_time
        type: string
      - description: 结束时间（RFC3339格式）
        in: query
        name: end_time
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ConversionTask'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取转换任务列表
      tags:
      - 模型转换
    post:
      consumes:
      - application/json
      description: 创建新的模型转换任务
      parameters:
      - description: 转换任务信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.CreateConversionTaskRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ConversionTask'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 创建转换任务
      tags:
      - 模型转换
  /api/conversion/tasks/{taskId}:
    delete:
      consumes:
      - application/json
      description: 删除指定的转换任务
      parameters:
      - description: 任务ID
        in: path
        name: taskId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 删除转换任务
      tags:
      - 模型转换
    get:
      consumes:
      - application/json
      description: 根据任务ID获取转换任务详情
      parameters:
      - description: 任务ID
        in: path
        name: taskId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ConversionTask'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取转换任务详情
      tags:
      - 模型转换
  /api/conversion/tasks/{taskId}/logs:
    get:
      consumes:
      - application/json
      description: 获取转换任务的执行日志
      parameters:
      - description: 任务ID
        in: path
        name: taskId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取转换日志
      tags:
      - 模型转换
  /api/conversion/tasks/{taskId}/progress:
    get:
      consumes:
      - application/json
      description: 获取转换任务的当前进度
      parameters:
      - description: 任务ID
        in: path
        name: taskId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.ConversionProgress'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取转换进度
      tags:
      - 模型转换
  /api/conversion/tasks/{taskId}/start:
    post:
      consumes:
      - application/json
      description: 手动启动指定的转换任务
      parameters:
      - description: 任务ID
        in: path
        name: taskId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 手动启动转换
      tags:
      - 模型转换
  /api/conversion/tasks/{taskId}/stop:
    post:
      consumes:
      - application/json
      description: 停止正在运行的转换任务
      parameters:
      - description: 任务ID
        in: path
        name: taskId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 停止转换
      tags:
      - 模型转换
  /api/converted-models:
    get:
      consumes:
      - application/json
      description: 分页获取转换后模型列表，支持多条件搜索
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 模型状态
        enum:
        - active
        - inactive
        - failed
        in: query
        name: status
        type: string
      - description: 目标芯片
        enum:
        - bm1684
        - bm1684x
        - bm1688
        in: query
        name: target_chip
        type: string
      - description: 用户ID
        in: query
        name: user_id
        type: integer
      - description: 原始模型ID
        in: query
        name: original_model_id
        type: integer
      - description: 标签（逗号分隔）
        in: query
        name: tags
        type: string
      - description: 模型名称搜索关键词
        in: query
        name: name
        type: string
      - description: 版本搜索关键词
        in: query
        name: version
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ConvertedModel'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取转换后模型列表
      tags:
      - 转换后模型
    post:
      consumes:
      - application/json
      description: 创建新的转换后模型记录
      parameters:
      - description: 转换后模型信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.CreateConvertedModelRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ConvertedModel'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 创建转换后模型
      tags:
      - 转换后模型
  /api/converted-models/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的转换后模型
      parameters:
      - description: 模型ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 删除转换后模型
      tags:
      - 转换后模型
    get:
      consumes:
      - application/json
      description: 根据ID获取转换后模型详情
      parameters:
      - description: 模型ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ConvertedModel'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取转换后模型详情
      tags:
      - 转换后模型
    put:
      consumes:
      - application/json
      description: 更新转换后模型信息
      parameters:
      - description: 模型ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.UpdateConvertedModelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 更新转换后模型
      tags:
      - 转换后模型
  /api/converted-models/{id}/deployments:
    get:
      consumes:
      - application/json
      description: 根据转换后模型ID获取其在哪些盒子上已部署
      parameters:
      - description: 转换后模型ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ModelBoxDeployment'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取转换后模型的部署信息
      tags:
      - 转换后模型
  /api/converted-models/{id}/download:
    get:
      consumes:
      - application/json
      description: 下载转换后模型文件
      parameters:
      - description: 模型ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: 模型文件
          schema:
            type: file
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 下载转换后模型
      tags:
      - 转换后模型
  /api/converted-models/key/{modelKey}/deployments:
    get:
      consumes:
      - application/json
      description: 根据模型Key获取其在哪些盒子上已部署
      parameters:
      - description: 模型Key
        in: path
        name: modelKey
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ModelBoxDeployment'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 根据模型Key获取部署信息
      tags:
      - 转换后模型
  /api/converted-models/original/{originalModelId}:
    get:
      consumes:
      - application/json
      description: 根据原始模型ID获取相关的转换后模型列表
      parameters:
      - description: 原始模型ID
        in: path
        name: originalModelId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ConvertedModel'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 根据原始模型获取转换后模型
      tags:
      - 转换后模型
  /api/converted-models/search:
    get:
      consumes:
      - application/json
      description: 根据关键词搜索转换后模型
      parameters:
      - description: 搜索关键词
        in: query
        name: keyword
        required: true
        type: string
      - description: 目标芯片
        in: query
        name: target_chip
        type: string
      - description: 模型状态
        in: query
        name: status
        type: string
      - description: 用户ID
        in: query
        name: user_id
        type: integer
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ConvertedModel'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 搜索转换后模型
      tags:
      - 转换后模型
  /api/converted-models/statistics:
    get:
      consumes:
      - application/json
      description: 获取转换后模型的统计信息
      parameters:
      - description: 用户ID
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.ConvertedModelStatistics'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取转换后模型统计
      tags:
      - 转换后模型
  /api/models:
    get:
      description: 获取模型列表，支持分页和筛选
      parameters:
      - description: 用户ID
        in: query
        name: user_id
        type: integer
      - description: 模型类型
        enum:
        - pt
        - onnx
        - pth
        in: query
        name: model_type
        type: string
      - description: 模型状态
        in: query
        name: status
        type: string
      - collectionFormat: csv
        description: 标签列表
        in: query
        items:
          type: string
        name: tags
        type: array
      - description: 模型名称搜索关键词
        in: query
        name: name
        type: string
      - description: 框架类型
        enum:
        - pytorch
        - onnx
        - tensorflow
        in: query
        name: framework
        type: string
      - description: AI任务类型
        enum:
        - detection
        - segmentation
        - classification
        in: query
        name: task_type
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - default: created_at
        description: 排序字段
        in: query
        name: sort_field
        type: string
      - default: desc
        description: 排序方向
        enum:
        - asc
        - desc
        in: query
        name: sort_order
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.GetModelListResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取模型列表
      tags:
      - 模型管理
  /api/models/{id}:
    delete:
      description: 软删除模型记录
      parameters:
      - description: 模型ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除模型
      tags:
      - 模型管理
    get:
      description: 根据模型ID获取详细信息
      parameters:
      - description: 模型ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.OriginalModel'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取模型详情
      tags:
      - 模型管理
    put:
      consumes:
      - application/json
      description: 更新模型的基本信息，包括AI任务相关参数
      parameters:
      - description: 模型ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.UpdateModelRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新模型信息
      tags:
      - 模型管理
  /api/models/{id}/download:
    get:
      description: 下载模型文件，支持大文件和错误恢复
      parameters:
      - description: 模型ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            type: file
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 下载模型文件
      tags:
      - 模型管理
  /api/models/{id}/validate:
    post:
      description: 验证模型文件的完整性和格式
      parameters:
      - description: 模型ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 验证模型
      tags:
      - 模型管理
  /api/models/search:
    get:
      description: 根据关键词搜索模型
      parameters:
      - description: 搜索关键词
        in: query
        name: keyword
        required: true
        type: string
      - description: 用户ID
        in: query
        name: user_id
        type: integer
      - description: 模型类型
        in: query
        name: model_type
        type: string
      - collectionFormat: csv
        description: 标签列表
        in: query
        items:
          type: string
        name: tags
        type: array
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.SearchModelResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 搜索模型
      tags:
      - 模型管理
  /api/models/statistics:
    get:
      description: 获取模型的各种统计数据
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.ModelStatisticsResponse'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取模型统计信息
      tags:
      - 模型管理
  /api/models/storage/statistics:
    get:
      description: 获取存储空间使用情况
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.StorageStatisticsResponse'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取存储统计信息
      tags:
      - 模型管理
  /api/models/upload:
    post:
      consumes:
      - multipart/form-data
      description: 直接上传模型文件，支持.pt、.onnx、.pth等格式
      parameters:
      - description: 模型文件
        in: formData
        name: file
        required: true
        type: file
      - description: 模型名称
        in: formData
        name: name
        required: true
        type: string
      - description: 模型版本
        in: formData
        name: version
        required: true
        type: string
      - description: 模型类型
        enum:
        - pt
        - onnx
        - pth
        in: formData
        name: model_type
        required: true
        type: string
      - description: 框架类型
        enum:
        - pytorch
        - onnx
        - tensorflow
        in: formData
        name: framework
        required: true
        type: string
      - description: 模型描述
        in: formData
        name: description
        type: string
      - description: 标签列表，逗号分隔
        in: formData
        name: tags
        type: string
      - default: detection
        description: AI任务类型
        enum:
        - detection
        - segmentation
        - classification
        in: formData
        name: task_type
        type: string
      - default: 640
        description: 输入宽度
        in: formData
        name: input_width
        type: integer
      - default: 640
        description: 输入高度
        in: formData
        name: input_height
        type: integer
      - default: 3
        description: 输入通道数
        in: formData
        name: input_channels
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 上传成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.OriginalModel'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 上传模型文件
      tags:
      - 模型管理
  /api/models/versions:
    get:
      description: 根据模型名称获取所有版本
      parameters:
      - description: 模型名称
        in: query
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.OriginalModel'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取模型版本列表
      tags:
      - 模型管理
  /api/sse/boxes:
    get:
      consumes:
      - text/event-stream
      description: 建立盒子状态变化的SSE连接，实时接收盒子状态更新
      parameters:
      - description: 用户ID，用于过滤用户相关事件
        in: query
        name: user_id
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: SSE事件流
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 盒子事件流
      tags:
      - SSE事件流
  /api/sse/close-all:
    post:
      consumes:
      - application/json
      description: 强制关闭所有活跃的SSE连接（管理员功能）
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 关闭所有SSE连接
      tags:
      - SSE事件流
  /api/sse/conversion-tasks:
    get:
      consumes:
      - text/event-stream
      description: 建立转换任务状态变化的SSE连接，实时接收转换任务状态更新
      parameters:
      - description: 用户ID，用于过滤用户相关事件
        in: query
        name: user_id
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: SSE事件流
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 转换任务事件流
      tags:
      - SSE事件流
  /api/sse/discovery:
    get:
      consumes:
      - text/event-stream
      description: 建立盒子扫描发现的SSE连接，实时接收扫描进度和发现结果
      parameters:
      - description: 用户ID，用于过滤用户相关事件
        in: query
        name: user_id
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: SSE事件流
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 盒子扫描发现事件流
      tags:
      - SSE事件流
  /api/sse/stats:
    get:
      consumes:
      - application/json
      description: 获取当前活跃的SSE连接统计信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.ConnectionStats'
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取SSE连接统计
      tags:
      - SSE事件流
  /api/sse/system:
    get:
      consumes:
      - text/event-stream
      description: 建立系统事件的SSE连接，实时接收系统级事件通知
      parameters:
      - description: 用户ID，用于过滤用户相关事件
        in: query
        name: user_id
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: SSE事件流
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 系统事件流
      tags:
      - SSE事件流
  /api/sse/tasks:
    get:
      consumes:
      - text/event-stream
      description: 建立任务状态变化的SSE连接，实时接收任务状态更新
      parameters:
      - description: 用户ID，用于过滤用户相关事件
        in: query
        name: user_id
        type: string
      produces:
      - text/event-stream
      responses:
        "200":
          description: SSE事件流
          schema:
            type: string
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 任务事件流
      tags:
      - SSE事件流
  /api/v1/boxes:
    get:
      description: 获取AI盒子列表，支持分页和筛选
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      - description: 盒子状态
        enum:
        - online
        - offline
        - error
        - upgrading
        in: query
        name: status
        type: string
      - description: 盒子名称搜索关键词
        in: query
        name: name
        type: string
      - description: 盒子位置搜索关键词
        in: query
        name: location
        type: string
      - description: 标签搜索，多个标签用逗号分隔
        in: query
        name: tags
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/controllers.BoxResponse'
                  type: array
              type: object
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取盒子列表
      tags:
      - 盒子管理
    post:
      consumes:
      - application/json
      description: 手动添加AI盒子到系统
      parameters:
      - description: 添加盒子请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.AddBoxRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.BoxResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 手动添加盒子
      tags:
      - 盒子管理
  /api/v1/boxes/{id}:
    delete:
      description: 删除指定的AI盒子
      parameters:
      - description: 盒子ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 删除盒子
      tags:
      - 盒子管理
    get:
      description: 获取指定AI盒子的详细信息
      parameters:
      - description: 盒子ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.BoxResponse'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取盒子详情
      tags:
      - 盒子管理
    put:
      consumes:
      - application/json
      description: 更新指定AI盒子的基本信息
      parameters:
      - description: 盒子ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新盒子请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateBoxRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.BoxResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 更新盒子信息
      tags:
      - 盒子管理
  /api/v1/boxes/{id}/models:
    get:
      description: 获取指定盒子上的AI模型列表
      parameters:
      - description: 盒子ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data: {}
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取盒子模型列表
      tags:
      - 盒子代理
  /api/v1/boxes/{id}/refresh:
    post:
      description: 手动刷新指定盒子的状态信息
      parameters:
      - description: 盒子ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 手动刷新盒子状态
      tags:
      - 盒子监控
  /api/v1/boxes/{id}/rollback:
    post:
      consumes:
      - application/json
      description: 将指定盒子回滚到之前的版本
      parameters:
      - description: 盒子ID
        in: path
        name: id
        required: true
        type: integer
      - description: 回滚请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.RollbackRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.UpgradeTaskResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 回滚盒子版本
      tags:
      - 升级管理
  /api/v1/boxes/{id}/status:
    get:
      description: 获取指定盒子的实时状态信息
      parameters:
      - description: 盒子ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data: {}
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取盒子实时状态
      tags:
      - 盒子监控
  /api/v1/boxes/{id}/status/history:
    get:
      description: 获取指定盒子的历史状态数据
      parameters:
      - description: 盒子ID
        in: path
        name: id
        required: true
        type: integer
      - description: 开始时间
        format: date-time
        in: query
        name: start_time
        type: string
      - description: 结束时间
        format: date-time
        in: query
        name: end_time
        type: string
      - default: 100
        description: 记录数量限制
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.BoxHeartbeat'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取盒子状态历史
      tags:
      - 盒子监控
  /api/v1/boxes/{id}/sync-tasks:
    post:
      consumes:
      - application/json
      description: 一键同步指定盒子的所有任务到管理端，操作是幂等的
      parameters:
      - description: 盒子ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 同步成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.TaskSyncResult'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: 盒子不存在
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: 内部服务器错误
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 同步盒子任务
      tags:
      - 盒子管理
  /api/v1/boxes/{id}/tasks:
    get:
      description: 获取指定盒子上的推理任务列表
      parameters:
      - description: 盒子ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data: {}
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取盒子任务列表
      tags:
      - 盒子代理
  /api/v1/boxes/{id}/upgrade:
    post:
      consumes:
      - application/json
      description: 对指定盒子执行软件升级
      parameters:
      - description: 盒子ID
        in: path
        name: id
        required: true
        type: integer
      - description: 升级请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.UpgradeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.UpgradeTaskResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 升级单个盒子
      tags:
      - 升级管理
  /api/v1/boxes/batch/upgrade:
    post:
      consumes:
      - application/json
      description: 对多个盒子执行批量软件升级
      parameters:
      - description: 批量升级请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.BatchUpgradeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.BatchUpgradeTaskResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 批量升级盒子
      tags:
      - 升级管理
  /api/v1/boxes/discover:
    post:
      consumes:
      - application/json
      description: 在指定IP范围内异步自动发现AI盒子，立即返回扫描任务ID，可通过SSE监听进度
      parameters:
      - description: 发现盒子请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.DiscoverBoxesRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.DiscoverBoxesResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 自动发现盒子
      tags:
      - 盒子管理
  /api/v1/boxes/discover/{scan_id}:
    get:
      description: 获取指定扫描任务的详细状态信息
      parameters:
      - description: 扫描任务ID
        in: path
        name: scan_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.ScanTask'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取扫描任务状态
      tags:
      - 盒子管理
  /api/v1/boxes/discover/{scan_id}/cancel:
    post:
      description: 取消正在进行的扫描任务
      parameters:
      - description: 扫描任务ID
        in: path
        name: scan_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 取消扫描任务
      tags:
      - 盒子管理
  /api/v1/boxes/overview:
    get:
      description: 获取所有盒子的概览统计信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data: {}
              type: object
      summary: 获取盒子概览统计
      tags:
      - 盒子监控
  /api/v1/deployments:
    get:
      consumes:
      - application/json
      description: 获取部署任务列表，支持按状态等条件筛选
      parameters:
      - description: 部署状态筛选
        enum:
        - pending
        - running
        - completed
        - failed
        - cancelled
        in: query
        name: status
        type: string
      - description: 创建者用户ID
        in: query
        name: created_by
        type: integer
      - description: 优先级筛选
        in: query
        name: priority
        type: integer
      - description: 关键词搜索
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取部署任务列表成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.DeploymentTask'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取部署任务列表
      tags:
      - 部署管理
    post:
      consumes:
      - application/json
      description: 创建一个新的部署任务，用于管理单个或多个任务的部署过程
      parameters:
      - description: 部署任务配置
        in: body
        name: deployment
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateDeploymentTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 部署任务创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DeploymentTask'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建部署任务
      tags:
      - 部署管理
  /api/v1/deployments/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的部署任务，如果任务正在运行会先取消
      parameters:
      - description: 部署任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 部署任务删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 部署任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除部署任务
      tags:
      - 部署管理
    get:
      consumes:
      - application/json
      description: 根据ID获取部署任务的详细信息
      parameters:
      - description: 部署任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取部署任务详情成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DeploymentTask'
              type: object
        "400":
          description: 部署任务ID不能为空
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 部署任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取部署任务详情
      tags:
      - 部署管理
  /api/v1/deployments/{id}/cancel:
    post:
      consumes:
      - application/json
      description: 取消指定的部署任务
      parameters:
      - description: 部署任务ID
        in: path
        name: id
        required: true
        type: integer
      - description: 取消原因
        in: body
        name: cancel
        schema:
          additionalProperties:
            type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 部署任务取消成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 部署任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 取消部署任务
      tags:
      - 部署管理
  /api/v1/deployments/{id}/logs:
    get:
      consumes:
      - application/json
      description: 获取指定部署任务的执行日志
      parameters:
      - description: 部署任务ID
        in: path
        name: id
        required: true
        type: integer
      - default: 100
        description: 日志条数限制
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取部署任务日志成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.DeploymentLog'
                  type: array
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 部署任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取部署任务日志
      tags:
      - 部署管理
  /api/v1/deployments/{id}/progress:
    get:
      consumes:
      - application/json
      description: 获取指定部署任务的执行进度
      parameters:
      - description: 部署任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取部署任务进度成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.DeploymentProgress'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 部署任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取部署任务进度
      tags:
      - 部署管理
  /api/v1/deployments/{id}/results:
    get:
      consumes:
      - application/json
      description: 获取指定部署任务的执行结果
      parameters:
      - description: 部署任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取部署任务结果成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.DeploymentResult'
                  type: array
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 部署任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取部署任务结果
      tags:
      - 部署管理
  /api/v1/deployments/{id}/start:
    post:
      consumes:
      - application/json
      description: 启动指定的部署任务
      parameters:
      - description: 部署任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 部署任务启动成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误或任务状态不允许启动
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 部署任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 开始执行部署任务
      tags:
      - 部署管理
  /api/v1/deployments/batch:
    post:
      consumes:
      - application/json
      description: 批量创建部署任务，将多个任务部署到多个盒子
      parameters:
      - description: 批量部署配置
        in: body
        name: batch
        required: true
        schema:
          $ref: '#/definitions/controllers.BatchDeploymentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 批量部署创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.DeploymentTask'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 批量创建部署
      tags:
      - 部署管理
  /api/v1/deployments/cleanup:
    post:
      consumes:
      - application/json
      description: 清理指定时间之前完成的部署任务
      parameters:
      - default: 30
        description: 保留天数
        in: query
        name: days
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 清理任务成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 清理旧任务
      tags:
      - 部署管理
  /api/v1/deployments/statistics:
    get:
      consumes:
      - application/json
      description: 获取部署任务的统计信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取部署统计成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取部署统计
      tags:
      - 部署管理
  /api/v1/model-deployment/tasks:
    get:
      consumes:
      - application/json
      description: 获取用户的模型部署任务列表
      parameters:
      - description: 用户ID
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ModelDeploymentTask'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取部署任务列表
      tags:
      - 模型部署
    post:
      consumes:
      - application/json
      description: 创建新的模型部署任务，将转换后模型部署到指定盒子
      parameters:
      - description: 部署任务信息
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateModelDeploymentRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ModelDeploymentTask'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 创建模型部署任务
      tags:
      - 模型部署
  /api/v1/model-deployment/tasks/{taskId}:
    delete:
      consumes:
      - application/json
      description: 删除指定的部署任务
      parameters:
      - description: 任务ID
        in: path
        name: taskId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 删除部署任务
      tags:
      - 模型部署
    get:
      consumes:
      - application/json
      description: 根据任务ID获取部署任务详情
      parameters:
      - description: 任务ID
        in: path
        name: taskId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ModelDeploymentTask'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取部署任务详情
      tags:
      - 模型部署
  /api/v1/model-deployment/tasks/{taskId}/cancel:
    post:
      consumes:
      - application/json
      description: 取消正在运行的部署任务
      parameters:
      - description: 任务ID
        in: path
        name: taskId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 取消部署任务
      tags:
      - 模型部署
  /api/v1/model-deployment/tasks/{taskId}/items:
    get:
      consumes:
      - application/json
      description: 获取指定任务的部署项列表
      parameters:
      - description: 任务ID
        in: path
        name: taskId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ModelDeploymentItem'
                  type: array
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取部署项列表
      tags:
      - 模型部署
  /api/v1/model-deployment/tasks/{taskId}/start:
    post:
      consumes:
      - application/json
      description: 启动指定的部署任务
      parameters:
      - description: 任务ID
        in: path
        name: taskId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 启动部署任务
      tags:
      - 模型部署
  /api/v1/tasks:
    get:
      consumes:
      - application/json
      description: 获取任务列表，支持按状态、标签、模型、盒子、优先级等条件筛选和搜索
      parameters:
      - description: 任务状态筛选
        enum:
        - pending
        - running
        - completed
        - failed
        - stopped
        - paused
        in: query
        name: status
        type: string
      - description: 标签筛选，多个标签用逗号分隔
        in: query
        name: tags
        type: string
      - description: 模型键筛选
        in: query
        name: modelKey
        type: string
      - description: 盒子ID筛选
        in: query
        name: boxId
        type: string
      - description: 优先级筛选
        in: query
        name: priority
        type: string
      - description: 关键词搜索（搜索任务ID、RTSP URL等）
        in: query
        name: keyword
        type: string
      - description: RTSP URL筛选关键词
        in: query
        name: rtsp_url
        type: string
      - description: 创建者用户ID
        in: query
        name: created_by
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取任务列表成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Task'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取任务列表
      tags:
      - 任务管理
    post:
      consumes:
      - application/json
      description: 创建一个新的AI推理任务，包含推理配置、ROI设置、输出设置等
      parameters:
      - description: 任务配置信息
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/controllers.CreateTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 任务创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Task'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "409":
          description: 任务ID已存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建新任务
      tags:
      - 任务管理
  /api/v1/tasks/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的任务，如果任务正在运行，会先停止任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 任务删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 任务状态不允许删除
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除任务
      tags:
      - 任务管理
    get:
      consumes:
      - application/json
      description: 根据任务ID或TaskID获取任务的详细信息
      parameters:
      - description: 任务ID（数字ID或TaskID）
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取任务详情成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Task'
              type: object
        "400":
          description: 任务ID不能为空
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取任务详情
      tags:
      - 任务管理
    put:
      consumes:
      - application/json
      description: 更新指定任务的配置信息
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - description: 任务更新信息
        in: body
        name: task
        required: true
        schema:
          $ref: '#/definitions/controllers.UpdateTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 任务更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新任务配置
      tags:
      - 任务管理
  /api/v1/tasks/{id}/compatible-boxes:
    get:
      consumes:
      - application/json
      description: 查找与指定任务兼容的盒子列表，按适配分数排序
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取兼容盒子成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/service.BoxScore'
                  type: array
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 查询失败
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取与任务兼容的盒子
      tags:
      - 任务管理
  /api/v1/tasks/{id}/deploy:
    post:
      consumes:
      - application/json
      description: 将任务部署到指定的AI盒子上执行，创建部署任务进行管理
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - description: 部署配置
        in: body
        name: deploy
        required: true
        schema:
          $ref: '#/definitions/controllers.DeployTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 任务下发成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 下发任务到指定盒子
      tags:
      - 任务管理
  /api/v1/tasks/{id}/logs:
    get:
      consumes:
      - application/json
      description: 获取指定任务的执行日志
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取任务日志成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取任务日志
      tags:
      - 任务管理
  /api/v1/tasks/{id}/pause:
    post:
      consumes:
      - application/json
      description: 暂停正在运行的任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 任务暂停成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Task'
              type: object
        "400":
          description: 任务状态不允许暂停
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 暂停任务
      tags:
      - 任务管理
  /api/v1/tasks/{id}/progress:
    put:
      consumes:
      - application/json
      description: 更新指定任务的执行进度
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      - description: 进度信息
        in: body
        name: progress
        required: true
        schema:
          additionalProperties:
            format: float64
            type: number
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: 任务进度更新成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新任务进度
      tags:
      - 任务管理
  /api/v1/tasks/{id}/results:
    get:
      consumes:
      - application/json
      description: 获取指定任务的执行结果统计信息
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取任务结果成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.TaskResultsResponse'
              type: object
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取任务结果
      tags:
      - 任务管理
  /api/v1/tasks/{id}/resume:
    post:
      consumes:
      - application/json
      description: 恢复已暂停的任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 任务恢复成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Task'
              type: object
        "400":
          description: 任务状态不允许恢复
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 恢复任务
      tags:
      - 任务管理
  /api/v1/tasks/{id}/retry:
    post:
      consumes:
      - application/json
      description: 重新执行失败的任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 任务重试成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Task'
              type: object
        "400":
          description: 任务不可重试
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 重试任务
      tags:
      - 任务管理
  /api/v1/tasks/{id}/schedule:
    post:
      consumes:
      - application/json
      description: 将指定任务调度到最合适的盒子
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 任务调度成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.TaskScheduleResult'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 调度失败
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 调度指定任务
      tags:
      - 任务管理
  /api/v1/tasks/{id}/start:
    post:
      consumes:
      - application/json
      description: 启动指定的任务，任务状态必须为pending或paused
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 任务启动成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Task'
              type: object
        "400":
          description: 任务状态不允许启动
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 启动任务
      tags:
      - 任务管理
  /api/v1/tasks/{id}/status:
    get:
      consumes:
      - application/json
      description: 获取指定任务的当前状态信息，包括在盒子上的运行状态
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取任务状态成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.TaskStatusResponse'
              type: object
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取任务状态
      tags:
      - 任务管理
  /api/v1/tasks/{id}/stop:
    post:
      consumes:
      - application/json
      description: 停止指定的任务，任务状态必须为running或paused
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 任务停止成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.Task'
              type: object
        "400":
          description: 任务状态不允许停止
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 停止任务
      tags:
      - 任务管理
  /api/v1/tasks/affinity:
    get:
      consumes:
      - application/json
      description: 根据提供的亲和性标签查找匹配的任务
      parameters:
      - description: 亲和性标签，多个标签用逗号分隔
        in: query
        name: tags
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 查找任务成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Task'
                  type: array
              type: object
        "400":
          description: 标签参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 根据亲和性标签查找任务
      tags:
      - 任务管理
  /api/v1/tasks/auto-schedule:
    get:
      consumes:
      - application/json
      description: 获取所有启用了自动调度的待执行任务
      parameters:
      - default: 10
        description: 限制返回数量
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取自动调度任务成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Task'
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取启用自动调度的任务
      tags:
      - 任务管理
  /api/v1/tasks/batch/delete:
    post:
      consumes:
      - application/json
      description: 批量删除多个任务，如果任务正在运行会先停止
      parameters:
      - description: 批量操作请求
        in: body
        name: batch
        required: true
        schema:
          $ref: '#/definitions/controllers.BatchOperationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 批量删除完成
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.BatchOperationResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 批量删除任务
      tags:
      - 任务管理
  /api/v1/tasks/batch/deploy:
    post:
      consumes:
      - application/json
      description: 创建批量部署任务，异步将多个任务部署到指定的AI盒子上执行
      parameters:
      - description: 批量部署配置
        in: body
        name: batch
        required: true
        schema:
          $ref: '#/definitions/controllers.BatchDeployRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 批量部署任务创建成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 批量下发任务（异步）
      tags:
      - 任务管理
  /api/v1/tasks/batch/start:
    post:
      consumes:
      - application/json
      description: 批量启动多个任务
      parameters:
      - description: 批量操作请求
        in: body
        name: batch
        required: true
        schema:
          $ref: '#/definitions/controllers.BatchOperationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 批量启动完成
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.BatchOperationResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 批量启动任务
      tags:
      - 任务管理
  /api/v1/tasks/batch/stop:
    post:
      consumes:
      - application/json
      description: 批量停止多个任务
      parameters:
      - description: 批量操作请求
        in: body
        name: batch
        required: true
        schema:
          $ref: '#/definitions/controllers.BatchOperationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 批量停止完成
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.BatchOperationResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 批量停止任务
      tags:
      - 任务管理
  /api/v1/tasks/box/{boxId}/compatible:
    get:
      consumes:
      - application/json
      description: 根据盒子ID获取与该盒子兼容的任务（基于亲和性标签）
      parameters:
      - description: 盒子ID
        in: path
        name: boxId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取兼容任务成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.Task'
                  type: array
              type: object
        "400":
          description: 盒子ID格式错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取指定盒子兼容的任务
      tags:
      - 任务管理
  /api/v1/tasks/schedule/auto:
    post:
      consumes:
      - application/json
      description: 触发一次自动调度，将启用自动调度的任务分配到合适的盒子
      produces:
      - application/json
      responses:
        "200":
          description: 自动调度完成
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.ScheduleResult'
              type: object
        "500":
          description: 调度失败
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 触发自动调度
      tags:
      - 任务管理
  /api/v1/tasks/statistics:
    get:
      consumes:
      - application/json
      description: 获取各种状态的任务数量统计信息
      produces:
      - application/json
      responses:
        "200":
          description: 获取任务统计成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取任务统计信息
      tags:
      - 任务管理
  /api/v1/tasks/tags:
    get:
      consumes:
      - application/json
      description: 获取系统中所有已使用的任务标签列表
      produces:
      - application/json
      responses:
        "200":
          description: 获取任务标签成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    type: string
                  type: array
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取所有任务标签
      tags:
      - 任务管理
  /api/v1/upgrade-packages:
    get:
      description: 获取升级包列表，支持分页和筛选
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页大小
        in: query
        name: size
        type: integer
      - description: 包类型
        in: query
        name: type
        type: string
      - description: 状态
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/controllers.UpgradePackageResponse'
                  type: array
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取升级包列表
      tags:
      - 升级包管理
    post:
      consumes:
      - application/json
      description: 创建新的升级包
      parameters:
      - description: 升级包信息
        in: body
        name: packageData
        required: true
        schema:
          $ref: '#/definitions/controllers.UpgradePackageRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.UpgradePackageResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 创建升级包
      tags:
      - 升级包管理
  /api/v1/upgrade-packages/{id}:
    get:
      description: 根据ID获取升级包详情
      parameters:
      - description: 升级包ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.UpgradePackageResponse'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取升级包详情
      tags:
      - 升级包管理
  /api/v1/upgrade-packages/{id}/download/{file_type}:
    get:
      description: 下载指定升级包的指定类型文件
      parameters:
      - description: 升级包ID
        in: path
        name: id
        required: true
        type: integer
      - description: 文件类型
        enum:
        - backend_program
        - frontend_ui
        in: path
        name: file_type
        required: true
        type: string
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            type: file
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 下载升级包文件
      tags:
      - 升级包管理
  /api/v1/upgrade-packages/{id}/status:
    put:
      consumes:
      - application/json
      description: 更新升级包状态（如设置为就绪、失败等）
      parameters:
      - description: 升级包ID
        in: path
        name: id
        required: true
        type: integer
      - description: 状态更新
        in: body
        name: status
        required: true
        schema:
          properties:
            status:
              type: string
          type: object
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.UpgradePackageResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 更新升级包状态
      tags:
      - 升级包管理
  /api/v1/upgrade-packages/{id}/upload:
    post:
      consumes:
      - multipart/form-data
      description: 上传后台程序或前台界面文件到指定升级包
      parameters:
      - description: 升级包ID
        in: path
        name: id
        required: true
        type: integer
      - description: 文件类型
        enum:
        - backend_program
        - frontend_ui
        in: formData
        name: file_type
        required: true
        type: string
      - description: 文件
        in: formData
        name: file
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.UpgradePackageResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 上传文件到升级包
      tags:
      - 升级包管理
  /api/v1/upgrade-packages/statistics:
    get:
      description: 获取升级包的统计信息
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  type: object
              type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取升级包统计信息
      tags:
      - 升级包管理
  /api/v1/upgrades:
    get:
      description: 获取升级任务列表，支持筛选和分页
      parameters:
      - description: 盒子ID
        in: query
        name: box_id
        type: integer
      - description: 任务状态
        enum:
        - pending
        - running
        - completed
        - failed
        - cancelled
        in: query
        name: status
        type: string
      - description: 目标版本号
        in: query
        name: version_to
        type: string
      - description: 源版本号
        in: query
        name: version_from
        type: string
      - description: 任务名称搜索关键词
        in: query
        name: name
        type: string
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/controllers.UpgradeTaskResponse'
                  type: array
              type: object
      summary: 获取升级任务列表
      tags:
      - 升级管理
  /api/v1/upgrades/{id}:
    delete:
      description: 删除指定的升级任务记录
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 删除升级任务
      tags:
      - 升级管理
    get:
      description: 获取指定升级任务的详细信息
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/controllers.UpgradeTaskResponse'
              type: object
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 获取升级任务详情
      tags:
      - 升级管理
  /api/v1/upgrades/{id}/cancel:
    post:
      description: 取消指定的升级任务（仅限待执行或执行中的任务）
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 取消升级任务
      tags:
      - 升级管理
  /api/v1/upgrades/{id}/retry:
    post:
      description: 重试失败的升级任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/controllers.ErrorResponse'
      summary: 重试升级任务
      tags:
      - 升级管理
  /api/v1/video/extract-frames/{frame_id}/image:
    get:
      consumes:
      - application/json
      description: 直接返回指定抽帧的图片文件内容
      parameters:
      - description: 抽帧ID
        in: path
        name: frame_id
        required: true
        type: integer
      produces:
      - image/*
      responses:
        "200":
          description: 图片文件
          schema:
            type: file
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 抽帧不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取抽帧图片文件
      tags:
      - 抽帧任务管理
  /api/v1/video/extract-frames/{frame_id}/info:
    get:
      consumes:
      - application/json
      description: 获取指定抽帧的图片信息（不返回图片内容）
      parameters:
      - description: 抽帧ID
        in: path
        name: frame_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.FrameImageInfo'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 抽帧不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取抽帧图片信息
      tags:
      - 抽帧任务管理
  /api/v1/video/extract-tasks:
    get:
      consumes:
      - application/json
      description: 分页获取抽帧任务列表，支持状态、数据源等条件筛选
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 任务状态
        enum:
        - pending
        - extracting
        - completed
        - stopped
        - failed
        in: query
        name: status
        type: string
      - description: 视频源ID
        in: query
        name: video_source_id
        type: integer
      - description: 视频文件ID
        in: query
        name: video_file_id
        type: integer
      - description: 用户ID
        in: query
        name: user_id
        type: integer
      - description: 任务名称搜索关键词
        in: query
        name: name
        type: string
      - description: 任务ID或描述搜索关键词
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ExtractTask'
                  type: array
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取抽帧任务列表
      tags:
      - 抽帧任务管理
    post:
      consumes:
      - application/json
      description: 创建视频抽帧任务，支持从视频源或视频文件抽帧
      parameters:
      - description: 抽帧任务创建请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.CreateExtractTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ExtractTask'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建抽帧任务
      tags:
      - 抽帧任务管理
  /api/v1/video/extract-tasks/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的抽帧任务及其相关数据
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除抽帧任务
      tags:
      - 抽帧任务管理
    get:
      consumes:
      - application/json
      description: 根据ID获取抽帧任务的详细信息
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.ExtractTask'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取抽帧任务详情
      tags:
      - 抽帧任务管理
  /api/v1/video/extract-tasks/{id}/download:
    get:
      consumes:
      - application/json
      description: 将指定抽帧任务的所有图片压缩为zip包下载
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/zip
      responses:
        "200":
          description: 压缩包文件
          schema:
            type: file
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 下载任务的所有抽帧图片
      tags:
      - 抽帧任务管理
  /api/v1/video/extract-tasks/{id}/frames:
    get:
      consumes:
      - application/json
      description: 获取指定任务的抽帧结果列表
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: integer
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: page_size
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.ExtractFrame'
                  type: array
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取任务的抽帧结果
      tags:
      - 抽帧任务管理
  /api/v1/video/extract-tasks/{id}/start:
    post:
      consumes:
      - application/json
      description: 启动指定的抽帧任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 启动成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 启动抽帧任务
      tags:
      - 抽帧任务管理
  /api/v1/video/extract-tasks/{id}/stop:
    post:
      consumes:
      - application/json
      description: 停止指定的抽帧任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 停止成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 停止抽帧任务
      tags:
      - 抽帧任务管理
  /api/v1/video/files:
    get:
      consumes:
      - application/json
      description: 分页获取视频文件列表，支持多条件搜索
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 文件状态
        enum:
        - uploading
        - processing
        - ready
        - failed
        in: query
        name: status
        type: string
      - description: 用户ID
        in: query
        name: user_id
        type: integer
      - description: 文件名称搜索关键词
        in: query
        name: name
        type: string
      - description: 文件格式筛选
        enum:
        - mp4
        - avi
        - mov
        - mkv
        in: query
        name: format
        type: string
      - description: 关键词搜索（搜索文件名、描述等）
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/controllers.PaginatedResponse'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.VideoFile'
                        type: array
                    type: object
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取视频文件列表
      tags:
      - 视频文件管理
  /api/v1/video/files/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的视频文件
      parameters:
      - description: 视频文件ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 视频文件不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除视频文件
      tags:
      - 视频文件管理
    get:
      consumes:
      - application/json
      description: 根据ID获取视频文件详细信息
      parameters:
      - description: 视频文件ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.VideoFile'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 视频文件不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取视频文件详情
      tags:
      - 视频文件管理
    put:
      consumes:
      - application/json
      description: 更新视频文件的基本信息
      parameters:
      - description: 视频文件ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.UpdateVideoFileRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.VideoFile'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 视频文件不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新视频文件信息
      tags:
      - 视频文件管理
  /api/v1/video/files/{id}/convert:
    post:
      consumes:
      - application/json
      description: 将视频文件转换为MP4格式
      parameters:
      - description: 视频文件ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 转换启动成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 视频文件不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 转换视频文件
      tags:
      - 视频文件管理
  /api/v1/video/files/{id}/download:
    get:
      description: 下载指定的视频文件
      parameters:
      - description: 视频文件ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: 视频文件
          schema:
            type: file
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 视频文件不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 下载视频文件
      tags:
      - 视频文件管理
  /api/v1/video/files/upload:
    post:
      consumes:
      - multipart/form-data
      description: 上传视频文件到系统
      parameters:
      - description: 视频文件
        in: formData
        name: file
        required: true
        type: file
      - description: 文件名称
        in: formData
        name: name
        required: true
        type: string
      - description: 文件描述
        in: formData
        name: description
        type: string
      - description: 用户ID
        in: formData
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 上传成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.VideoFile'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 上传视频文件
      tags:
      - 视频文件管理
  /api/v1/video/record-tasks:
    get:
      consumes:
      - application/json
      description: 分页获取录制任务列表，支持状态、视频源等条件筛选
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 20
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 任务状态
        enum:
        - pending
        - recording
        - completed
        - stopped
        - failed
        in: query
        name: status
        type: string
      - description: 视频源ID
        in: query
        name: video_source_id
        type: integer
      - description: 用户ID
        in: query
        name: user_id
        type: integer
      - description: 任务名称搜索关键词
        in: query
        name: name
        type: string
      - description: 任务ID或描述搜索关键词
        in: query
        name: keyword
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.PaginatedResponse'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/models.RecordTask'
                  type: array
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取录制任务列表
      tags:
      - 录制任务管理
    post:
      consumes:
      - application/json
      description: 创建视频录制任务，仅支持实时视频流录制
      parameters:
      - description: 录制任务创建请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.CreateRecordTaskRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.RecordTask'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建录制任务
      tags:
      - 录制任务管理
  /api/v1/video/record-tasks/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的录制任务及其相关数据
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除录制任务
      tags:
      - 录制任务管理
    get:
      consumes:
      - application/json
      description: 根据ID获取录制任务的详细信息
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.RecordTask'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取录制任务详情
      tags:
      - 录制任务管理
  /api/v1/video/record-tasks/{id}/download:
    get:
      consumes:
      - application/json
      description: 下载指定录制任务的录制文件
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: 录制文件
          schema:
            type: file
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在或文件不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 下载录制文件
      tags:
      - 录制任务管理
  /api/v1/video/record-tasks/{id}/start:
    post:
      consumes:
      - application/json
      description: 启动指定的录制任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 启动成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 启动录制任务
      tags:
      - 录制任务管理
  /api/v1/video/record-tasks/{id}/stop:
    post:
      consumes:
      - application/json
      description: 停止指定的录制任务
      parameters:
      - description: 任务ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 停止成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 任务不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 停止录制任务
      tags:
      - 录制任务管理
  /api/v1/video/record-tasks/statistics:
    get:
      consumes:
      - application/json
      description: 获取录制任务的统计信息，包括各状态的任务数量
      parameters:
      - description: 用户ID，不指定则统计所有用户
        in: query
        name: user_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.RecordTaskStatistics'
              type: object
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取录制任务统计信息
      tags:
      - 录制任务管理
  /api/v1/video/sources:
    get:
      consumes:
      - application/json
      description: 分页获取视频源列表，支持按名称和类型搜索
      parameters:
      - default: 1
        description: 页码
        in: query
        name: page
        type: integer
      - default: 10
        description: 每页数量
        in: query
        name: page_size
        type: integer
      - description: 用户ID
        in: query
        name: user_id
        type: integer
      - description: 视频源名称搜索关键词
        in: query
        name: name
        type: string
      - description: 视频源类型
        enum:
        - file
        - stream
        - camera
        in: query
        name: type
        type: string
      - description: 视频源状态
        enum:
        - active
        - inactive
        - error
        in: query
        name: status
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/controllers.PaginatedResponse'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.VideoSource'
                        type: array
                    type: object
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取视频源列表
      tags:
      - 视频源管理
    post:
      consumes:
      - application/json
      description: 创建新的视频源
      parameters:
      - description: 创建请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.CreateVideoSourceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 创建成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.VideoSource'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 创建视频源
      tags:
      - 视频源管理
  /api/v1/video/sources/{id}:
    delete:
      consumes:
      - application/json
      description: 删除指定的视频源
      parameters:
      - description: 视频源ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 删除成功
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 视频源不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 删除视频源
      tags:
      - 视频源管理
    get:
      consumes:
      - application/json
      description: 根据ID获取视频源详细信息
      parameters:
      - description: 视频源ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 获取成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.VideoSource'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 视频源不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 获取视频源详情
      tags:
      - 视频源管理
    put:
      consumes:
      - application/json
      description: 更新视频源信息
      parameters:
      - description: 视频源ID
        in: path
        name: id
        required: true
        type: integer
      - description: 更新请求
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/service.UpdateVideoSourceRequest'
      produces:
      - application/json
      responses:
        "200":
          description: 更新成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/models.VideoSource'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 视频源不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 更新视频源
      tags:
      - 视频源管理
  /api/v1/video/sources/{id}/screenshot:
    post:
      consumes:
      - application/json
      description: 对指定视频源进行截图，返回base64编码的jpg图片
      parameters:
      - description: 视频源ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: 截图成功
          schema:
            allOf:
            - $ref: '#/definitions/controllers.APIResponse'
            - properties:
                data:
                  $ref: '#/definitions/service.ScreenshotResponse'
              type: object
        "400":
          description: 请求参数错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "404":
          description: 视频源不存在
          schema:
            $ref: '#/definitions/controllers.APIResponse'
        "500":
          description: 服务器内部错误
          schema:
            $ref: '#/definitions/controllers.APIResponse'
      summary: 视频源截图
      tags:
      - 视频源管理
  /health:
    get:
      description: 检查服务健康状态
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.HealthResponse'
      summary: 健康检查
      tags:
      - 系统
  /ready:
    get:
      description: 检查服务是否就绪
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/controllers.HealthResponse'
      summary: 就绪检查
      tags:
      - 系统
swagger: "2.0"
